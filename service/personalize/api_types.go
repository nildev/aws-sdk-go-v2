// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package personalize

import (
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

var _ aws.Config
var _ = awsutil.Prettify

// Describes a custom algorithm.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/Algorithm
type Algorithm struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the algorithm.
	AlgorithmArn *string `json:"personalize:Algorithm:AlgorithmArn" locationName:"algorithmArn" type:"string"`

	// The URI of the Docker container for the algorithm image.
	AlgorithmImage *AlgorithmImage `json:"personalize:Algorithm:AlgorithmImage" locationName:"algorithmImage" type:"structure"`

	// The date and time (in Unix time) that the algorithm was created.
	CreationDateTime *time.Time `json:"personalize:Algorithm:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// Specifies the default hyperparameters, their ranges, and whether they are
	// tunable. A tunable hyperparameter can have its value determined during hyperparameter
	// optimization (HPO).
	DefaultHyperParameterRanges *DefaultHyperParameterRanges `json:"personalize:Algorithm:DefaultHyperParameterRanges" locationName:"defaultHyperParameterRanges" type:"structure"`

	// Specifies the default hyperparameters.
	DefaultHyperParameters map[string]string `json:"personalize:Algorithm:DefaultHyperParameters" locationName:"defaultHyperParameters" type:"map"`

	// Specifies the default maximum number of training jobs and parallel training
	// jobs.
	DefaultResourceConfig map[string]string `json:"personalize:Algorithm:DefaultResourceConfig" locationName:"defaultResourceConfig" type:"map"`

	// The date and time (in Unix time) that the algorithm was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:Algorithm:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the algorithm.
	Name *string `json:"personalize:Algorithm:Name" locationName:"name" min:"1" type:"string"`

	// The Amazon Resource Name (ARN) of the role.
	RoleArn *string `json:"personalize:Algorithm:RoleArn" locationName:"roleArn" type:"string"`

	// The training input mode.
	TrainingInputMode *string `json:"personalize:Algorithm:TrainingInputMode" locationName:"trainingInputMode" type:"string"`
}

// String returns the string representation
func (s Algorithm) String() string {
	return awsutil.Prettify(s)
}

// Describes an algorithm image.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/AlgorithmImage
type AlgorithmImage struct {
	_ struct{} `type:"structure"`

	// The URI of the Docker container for the algorithm image.
	//
	// DockerURI is a required field
	DockerURI *string `json:"personalize:AlgorithmImage:DockerURI" locationName:"dockerURI" type:"string" required:"true"`

	// The name of the algorithm image.
	Name *string `json:"personalize:AlgorithmImage:Name" locationName:"name" min:"1" type:"string"`
}

// String returns the string representation
func (s AlgorithmImage) String() string {
	return awsutil.Prettify(s)
}

// When the solution performs AutoML (performAutoML is true in CreateSolution),
// Amazon Personalize determines which recipe, from the specified list, optimizes
// the given metric. Amazon Personalize then uses that recipe for the solution.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/AutoMLConfig
type AutoMLConfig struct {
	_ struct{} `type:"structure"`

	// The metric to optimize.
	MetricName *string `json:"personalize:AutoMLConfig:MetricName" locationName:"metricName" type:"string"`

	// The list of candidate recipes.
	RecipeList []string `json:"personalize:AutoMLConfig:RecipeList" locationName:"recipeList" type:"list"`
}

// String returns the string representation
func (s AutoMLConfig) String() string {
	return awsutil.Prettify(s)
}

// When the solution performs AutoML (performAutoML is true in CreateSolution),
// specifies the recipe that best optimized the specified metric.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/AutoMLResult
type AutoMLResult struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the best recipe.
	BestRecipeArn *string `json:"personalize:AutoMLResult:BestRecipeArn" locationName:"bestRecipeArn" type:"string"`
}

// String returns the string representation
func (s AutoMLResult) String() string {
	return awsutil.Prettify(s)
}

// Describes a deployed solution version, otherwise known as a campaign. For
// more information on campaigns, see CreateCampaign.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/Campaign
type Campaign struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the campaign.
	CampaignArn *string `json:"personalize:Campaign:CampaignArn" locationName:"campaignArn" type:"string"`

	// The date and time (in Unix format) that the campaign was created.
	CreationDateTime *time.Time `json:"personalize:Campaign:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// If a campaign fails, the reason behind the failure.
	FailureReason *string `json:"personalize:Campaign:FailureReason" locationName:"failureReason" type:"string"`

	// The date and time (in Unix format) that the campaign was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:Campaign:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// Provides a summary of the properties of a campaign update. For a complete
	// listing, call the DescribeCampaign API.
	LatestCampaignUpdate *CampaignUpdateSummary `json:"personalize:Campaign:LatestCampaignUpdate" locationName:"latestCampaignUpdate" type:"structure"`

	// Specifies the requested minimum provisioned transactions (recommendations)
	// per second.
	MinProvisionedTPS *int64 `json:"personalize:Campaign:MinProvisionedTPS" locationName:"minProvisionedTPS" min:"1" type:"integer"`

	// The name of the campaign.
	Name *string `json:"personalize:Campaign:Name" locationName:"name" min:"1" type:"string"`

	// The Amazon Resource Name (ARN) of a specific version of the solution.
	SolutionVersionArn *string `json:"personalize:Campaign:SolutionVersionArn" locationName:"solutionVersionArn" type:"string"`

	// The status of the campaign.
	//
	// A campaign can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:Campaign:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s Campaign) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of a campaign. For a complete listing,
// call the DescribeCampaign API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/CampaignSummary
type CampaignSummary struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the campaign.
	CampaignArn *string `json:"personalize:CampaignSummary:CampaignArn" locationName:"campaignArn" type:"string"`

	// The date and time (in Unix time) that the campaign was created.
	CreationDateTime *time.Time `json:"personalize:CampaignSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// If a campaign fails, the reason behind the failure.
	FailureReason *string `json:"personalize:CampaignSummary:FailureReason" locationName:"failureReason" type:"string"`

	// The date and time (in Unix time) that the campaign was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:CampaignSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the campaign.
	Name *string `json:"personalize:CampaignSummary:Name" locationName:"name" min:"1" type:"string"`

	// The status of the campaign.
	//
	// A campaign can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:CampaignSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s CampaignSummary) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of a campaign update. For a complete
// listing, call the DescribeCampaign API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/CampaignUpdateSummary
type CampaignUpdateSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the campaign update was created.
	CreationDateTime *time.Time `json:"personalize:CampaignUpdateSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// If a campaign update fails, the reason behind the failure.
	FailureReason *string `json:"personalize:CampaignUpdateSummary:FailureReason" locationName:"failureReason" type:"string"`

	// The date and time (in Unix time) that the campaign update was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:CampaignUpdateSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// Specifies the requested minimum provisioned transactions (recommendations)
	// per second that Amazon Personalize will support.
	MinProvisionedTPS *int64 `json:"personalize:CampaignUpdateSummary:MinProvisionedTPS" locationName:"minProvisionedTPS" min:"1" type:"integer"`

	// The Amazon Resource Name (ARN) of the deployed solution version.
	SolutionVersionArn *string `json:"personalize:CampaignUpdateSummary:SolutionVersionArn" locationName:"solutionVersionArn" type:"string"`

	// The status of the campaign update.
	//
	// A campaign update can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:CampaignUpdateSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s CampaignUpdateSummary) String() string {
	return awsutil.Prettify(s)
}

// Provides the name and range of a categorical hyperparameter.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/CategoricalHyperParameterRange
type CategoricalHyperParameterRange struct {
	_ struct{} `type:"structure"`

	// The name of the hyperparameter.
	Name *string `json:"personalize:CategoricalHyperParameterRange:Name" locationName:"name" type:"string"`

	// A list of the categories for the hyperparameter.
	Values []string `json:"personalize:CategoricalHyperParameterRange:Values" locationName:"values" type:"list"`
}

// String returns the string representation
func (s CategoricalHyperParameterRange) String() string {
	return awsutil.Prettify(s)
}

// Provides the name and range of a continuous hyperparameter.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/ContinuousHyperParameterRange
type ContinuousHyperParameterRange struct {
	_ struct{} `type:"structure"`

	// The maximum allowable value for the hyperparameter.
	MaxValue *float64 `json:"personalize:ContinuousHyperParameterRange:MaxValue" locationName:"maxValue" type:"double"`

	// The minimum allowable value for the hyperparameter.
	MinValue *float64 `json:"personalize:ContinuousHyperParameterRange:MinValue" locationName:"minValue" type:"double"`

	// The name of the hyperparameter.
	Name *string `json:"personalize:ContinuousHyperParameterRange:Name" locationName:"name" type:"string"`
}

// String returns the string representation
func (s ContinuousHyperParameterRange) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ContinuousHyperParameterRange) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ContinuousHyperParameterRange"}
	if s.MaxValue != nil && *s.MaxValue < -1e+06 {
		invalidParams.Add(aws.NewErrParamMinValue("MaxValue", -1e+06))
	}
	if s.MinValue != nil && *s.MinValue < -1e+06 {
		invalidParams.Add(aws.NewErrParamMinValue("MinValue", -1e+06))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Describes the data source that contains the data to upload to a dataset.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DataSource
type DataSource struct {
	_ struct{} `type:"structure"`

	// The path to the Amazon S3 bucket where the data that you want to upload to
	// your dataset is stored. For example:
	//
	// s3://bucket-name/training-data.csv
	DataLocation *string `json:"personalize:DataSource:DataLocation" locationName:"dataLocation" type:"string"`
}

// String returns the string representation
func (s DataSource) String() string {
	return awsutil.Prettify(s)
}

// Provides metadata for a dataset.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/Dataset
type Dataset struct {
	_ struct{} `type:"structure"`

	// The creation date and time (in Unix time) of the dataset.
	CreationDateTime *time.Time `json:"personalize:Dataset:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the dataset that you want metadata for.
	DatasetArn *string `json:"personalize:Dataset:DatasetArn" locationName:"datasetArn" type:"string"`

	// The Amazon Resource Name (ARN) of the dataset group.
	DatasetGroupArn *string `json:"personalize:Dataset:DatasetGroupArn" locationName:"datasetGroupArn" type:"string"`

	// One of the following values:
	//
	//    * Interactions
	//
	//    * Items
	//
	//    * Users
	DatasetType *string `json:"personalize:Dataset:DatasetType" locationName:"datasetType" type:"string"`

	// A time stamp that shows when the dataset was updated.
	LastUpdatedDateTime *time.Time `json:"personalize:Dataset:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the dataset.
	Name *string `json:"personalize:Dataset:Name" locationName:"name" min:"1" type:"string"`

	// The ARN of the associated schema.
	SchemaArn *string `json:"personalize:Dataset:SchemaArn" locationName:"schemaArn" type:"string"`

	// The status of the dataset.
	//
	// A dataset can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:Dataset:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s Dataset) String() string {
	return awsutil.Prettify(s)
}

// A dataset group is a collection of related datasets (Interactions, User,
// and Item). You create a dataset group by calling CreateDatasetGroup. You
// then create a dataset and add it to a dataset group by calling CreateDataset.
// The dataset group is used to create and train a solution by calling CreateSolution.
// A dataset group can contain only one of each type of dataset.
//
// You can specify an AWS Key Management Service (KMS) key to encrypt the datasets
// in the group.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DatasetGroup
type DatasetGroup struct {
	_ struct{} `type:"structure"`

	// The creation date and time (in Unix time) of the dataset group.
	CreationDateTime *time.Time `json:"personalize:DatasetGroup:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the dataset group.
	DatasetGroupArn *string `json:"personalize:DatasetGroup:DatasetGroupArn" locationName:"datasetGroupArn" type:"string"`

	// If creating a dataset group fails, provides the reason why.
	FailureReason *string `json:"personalize:DatasetGroup:FailureReason" locationName:"failureReason" type:"string"`

	// The Amazon Resource Name (ARN) of the KMS key used to encrypt the datasets.
	KmsKeyArn *string `json:"personalize:DatasetGroup:KmsKeyArn" locationName:"kmsKeyArn" type:"string"`

	// The last update date and time (in Unix time) of the dataset group.
	LastUpdatedDateTime *time.Time `json:"personalize:DatasetGroup:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the dataset group.
	Name *string `json:"personalize:DatasetGroup:Name" locationName:"name" min:"1" type:"string"`

	// The ARN of the IAM role that has permissions to create the dataset group.
	RoleArn *string `json:"personalize:DatasetGroup:RoleArn" locationName:"roleArn" type:"string"`

	// The current status of the dataset group.
	//
	// A dataset group can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING
	Status *string `json:"personalize:DatasetGroup:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s DatasetGroup) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of a dataset group. For a complete listing,
// call the DescribeDatasetGroup API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DatasetGroupSummary
type DatasetGroupSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the dataset group was created.
	CreationDateTime *time.Time `json:"personalize:DatasetGroupSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the dataset group.
	DatasetGroupArn *string `json:"personalize:DatasetGroupSummary:DatasetGroupArn" locationName:"datasetGroupArn" type:"string"`

	// If creating a dataset group fails, the reason behind the failure.
	FailureReason *string `json:"personalize:DatasetGroupSummary:FailureReason" locationName:"failureReason" type:"string"`

	// The date and time (in Unix time) that the dataset group was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:DatasetGroupSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the dataset group.
	Name *string `json:"personalize:DatasetGroupSummary:Name" locationName:"name" min:"1" type:"string"`

	// The status of the dataset group.
	//
	// A dataset group can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING
	Status *string `json:"personalize:DatasetGroupSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s DatasetGroupSummary) String() string {
	return awsutil.Prettify(s)
}

// Describes a job that imports training data from a data source (Amazon S3
// bucket) to an Amazon Personalize dataset. For more information, see CreateDatasetImportJob.
//
// A dataset import job can be in one of the following states:
//
//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DatasetImportJob
type DatasetImportJob struct {
	_ struct{} `type:"structure"`

	// The creation date and time (in Unix time) of the dataset import job.
	CreationDateTime *time.Time `json:"personalize:DatasetImportJob:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon S3 bucket that contains the training data to import.
	DataSource *DataSource `json:"personalize:DatasetImportJob:DataSource" locationName:"dataSource" type:"structure"`

	// The Amazon Resource Name (ARN) of the dataset that receives the imported
	// data.
	DatasetArn *string `json:"personalize:DatasetImportJob:DatasetArn" locationName:"datasetArn" type:"string"`

	// The ARN of the dataset import job.
	DatasetImportJobArn *string `json:"personalize:DatasetImportJob:DatasetImportJobArn" locationName:"datasetImportJobArn" type:"string"`

	// If a dataset import job fails, provides the reason why.
	FailureReason *string `json:"personalize:DatasetImportJob:FailureReason" locationName:"failureReason" type:"string"`

	// The name of the import job.
	JobName *string `json:"personalize:DatasetImportJob:JobName" locationName:"jobName" min:"1" type:"string"`

	// The date and time (in Unix time) the dataset was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:DatasetImportJob:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The ARN of the AWS Identity and Access Management (IAM) role that has permissions
	// to read from the Amazon S3 data source.
	RoleArn *string `json:"personalize:DatasetImportJob:RoleArn" locationName:"roleArn" type:"string"`

	// The status of the dataset import job.
	//
	// A dataset import job can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	Status *string `json:"personalize:DatasetImportJob:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s DatasetImportJob) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of a dataset import job. For a complete
// listing, call the DescribeDatasetImportJob API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DatasetImportJobSummary
type DatasetImportJobSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the dataset import job was created.
	CreationDateTime *time.Time `json:"personalize:DatasetImportJobSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the dataset import job.
	DatasetImportJobArn *string `json:"personalize:DatasetImportJobSummary:DatasetImportJobArn" locationName:"datasetImportJobArn" type:"string"`

	// If a dataset import job fails, the reason behind the failure.
	FailureReason *string `json:"personalize:DatasetImportJobSummary:FailureReason" locationName:"failureReason" type:"string"`

	// The name of the dataset import job.
	JobName *string `json:"personalize:DatasetImportJobSummary:JobName" locationName:"jobName" min:"1" type:"string"`

	// The date and time (in Unix time) that the dataset was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:DatasetImportJobSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The status of the dataset import job.
	//
	// A dataset import job can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	Status *string `json:"personalize:DatasetImportJobSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s DatasetImportJobSummary) String() string {
	return awsutil.Prettify(s)
}

// Describes the schema for a dataset. For more information on schemas, see
// CreateSchema.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DatasetSchema
type DatasetSchema struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the schema was created.
	CreationDateTime *time.Time `json:"personalize:DatasetSchema:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The date and time (in Unix time) that the schema was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:DatasetSchema:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the schema.
	Name *string `json:"personalize:DatasetSchema:Name" locationName:"name" min:"1" type:"string"`

	// The schema.
	Schema *string `json:"personalize:DatasetSchema:Schema" locationName:"schema" type:"string"`

	// The Amazon Resource Name (ARN) of the schema.
	SchemaArn *string `json:"personalize:DatasetSchema:SchemaArn" locationName:"schemaArn" type:"string"`
}

// String returns the string representation
func (s DatasetSchema) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of a dataset schema. For a complete
// listing, call the DescribeSchema API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DatasetSchemaSummary
type DatasetSchemaSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the schema was created.
	CreationDateTime *time.Time `json:"personalize:DatasetSchemaSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The date and time (in Unix time) that the schema was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:DatasetSchemaSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the schema.
	Name *string `json:"personalize:DatasetSchemaSummary:Name" locationName:"name" min:"1" type:"string"`

	// The Amazon Resource Name (ARN) of the schema.
	SchemaArn *string `json:"personalize:DatasetSchemaSummary:SchemaArn" locationName:"schemaArn" type:"string"`
}

// String returns the string representation
func (s DatasetSchemaSummary) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of a dataset. For a complete listing,
// call the DescribeDataset API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DatasetSummary
type DatasetSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the dataset was created.
	CreationDateTime *time.Time `json:"personalize:DatasetSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the dataset.
	DatasetArn *string `json:"personalize:DatasetSummary:DatasetArn" locationName:"datasetArn" type:"string"`

	// The dataset type. One of the following values:
	//
	//    * Interactions
	//
	//    * Items
	//
	//    * Users
	//
	//    * Event-Interactions
	DatasetType *string `json:"personalize:DatasetSummary:DatasetType" locationName:"datasetType" type:"string"`

	// The date and time (in Unix time) that the dataset was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:DatasetSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the dataset.
	Name *string `json:"personalize:DatasetSummary:Name" locationName:"name" min:"1" type:"string"`

	// The status of the dataset.
	//
	// A dataset can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:DatasetSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s DatasetSummary) String() string {
	return awsutil.Prettify(s)
}

// Provides the name and default range of a categorical hyperparameter and whether
// the hyperparameter is tunable. A tunable hyperparameter can have its value
// determined during hyperparameter optimization (HPO).
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DefaultCategoricalHyperParameterRange
type DefaultCategoricalHyperParameterRange struct {
	_ struct{} `type:"structure"`

	// Whether the hyperparameter is tunable.
	IsTunable *bool `json:"personalize:DefaultCategoricalHyperParameterRange:IsTunable" locationName:"isTunable" type:"boolean"`

	// The name of the hyperparameter.
	Name *string `json:"personalize:DefaultCategoricalHyperParameterRange:Name" locationName:"name" type:"string"`

	// A list of the categories for the hyperparameter.
	Values []string `json:"personalize:DefaultCategoricalHyperParameterRange:Values" locationName:"values" type:"list"`
}

// String returns the string representation
func (s DefaultCategoricalHyperParameterRange) String() string {
	return awsutil.Prettify(s)
}

// Provides the name and default range of a continuous hyperparameter and whether
// the hyperparameter is tunable. A tunable hyperparameter can have its value
// determined during hyperparameter optimization (HPO).
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DefaultContinuousHyperParameterRange
type DefaultContinuousHyperParameterRange struct {
	_ struct{} `type:"structure"`

	// Whether the hyperparameter is tunable.
	IsTunable *bool `json:"personalize:DefaultContinuousHyperParameterRange:IsTunable" locationName:"isTunable" type:"boolean"`

	// The maximum allowable value for the hyperparameter.
	MaxValue *float64 `json:"personalize:DefaultContinuousHyperParameterRange:MaxValue" locationName:"maxValue" type:"double"`

	// The minimum allowable value for the hyperparameter.
	MinValue *float64 `json:"personalize:DefaultContinuousHyperParameterRange:MinValue" locationName:"minValue" type:"double"`

	// The name of the hyperparameter.
	Name *string `json:"personalize:DefaultContinuousHyperParameterRange:Name" locationName:"name" type:"string"`
}

// String returns the string representation
func (s DefaultContinuousHyperParameterRange) String() string {
	return awsutil.Prettify(s)
}

// Specifies the hyperparameters and their default ranges. Hyperparameters can
// be categorical, continuous, or integer-valued.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DefaultHyperParameterRanges
type DefaultHyperParameterRanges struct {
	_ struct{} `type:"structure"`

	// The categorical hyperparameters and their default ranges.
	CategoricalHyperParameterRanges []DefaultCategoricalHyperParameterRange `json:"personalize:DefaultHyperParameterRanges:CategoricalHyperParameterRanges" locationName:"categoricalHyperParameterRanges" type:"list"`

	// The continuous hyperparameters and their default ranges.
	ContinuousHyperParameterRanges []DefaultContinuousHyperParameterRange `json:"personalize:DefaultHyperParameterRanges:ContinuousHyperParameterRanges" locationName:"continuousHyperParameterRanges" type:"list"`

	// The integer-valued hyperparameters and their default ranges.
	IntegerHyperParameterRanges []DefaultIntegerHyperParameterRange `json:"personalize:DefaultHyperParameterRanges:IntegerHyperParameterRanges" locationName:"integerHyperParameterRanges" type:"list"`
}

// String returns the string representation
func (s DefaultHyperParameterRanges) String() string {
	return awsutil.Prettify(s)
}

// Provides the name and default range of a integer-valued hyperparameter and
// whether the hyperparameter is tunable. A tunable hyperparameter can have
// its value determined during hyperparameter optimization (HPO).
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/DefaultIntegerHyperParameterRange
type DefaultIntegerHyperParameterRange struct {
	_ struct{} `type:"structure"`

	// Indicates whether the hyperparameter is tunable.
	IsTunable *bool `json:"personalize:DefaultIntegerHyperParameterRange:IsTunable" locationName:"isTunable" type:"boolean"`

	// The maximum allowable value for the hyperparameter.
	MaxValue *int64 `json:"personalize:DefaultIntegerHyperParameterRange:MaxValue" locationName:"maxValue" type:"integer"`

	// The minimum allowable value for the hyperparameter.
	MinValue *int64 `json:"personalize:DefaultIntegerHyperParameterRange:MinValue" locationName:"minValue" type:"integer"`

	// The name of the hyperparameter.
	Name *string `json:"personalize:DefaultIntegerHyperParameterRange:Name" locationName:"name" type:"string"`
}

// String returns the string representation
func (s DefaultIntegerHyperParameterRange) String() string {
	return awsutil.Prettify(s)
}

// Provides information about an event tracker.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/EventTracker
type EventTracker struct {
	_ struct{} `type:"structure"`

	// The Amazon AWS account that owns the event tracker.
	AccountId *string `json:"personalize:EventTracker:AccountId" locationName:"accountId" type:"string"`

	// The date and time (in Unix format) that the event tracker was created.
	CreationDateTime *time.Time `json:"personalize:EventTracker:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the dataset group that receives the event
	// data.
	DatasetGroupArn *string `json:"personalize:EventTracker:DatasetGroupArn" locationName:"datasetGroupArn" type:"string"`

	// The ARN of the event tracker.
	EventTrackerArn *string `json:"personalize:EventTracker:EventTrackerArn" locationName:"eventTrackerArn" type:"string"`

	// The date and time (in Unix time) that the event tracker was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:EventTracker:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the event tracker.
	Name *string `json:"personalize:EventTracker:Name" locationName:"name" min:"1" type:"string"`

	// The status of the event tracker.
	//
	// An event tracker can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:EventTracker:Status" locationName:"status" type:"string"`

	// The ID of the event tracker. Include this ID in requests to the PutEvents
	// (https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html)
	// API.
	TrackingId *string `json:"personalize:EventTracker:TrackingId" locationName:"trackingId" type:"string"`
}

// String returns the string representation
func (s EventTracker) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of an event tracker. For a complete
// listing, call the DescribeEventTracker API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/EventTrackerSummary
type EventTrackerSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the event tracker was created.
	CreationDateTime *time.Time `json:"personalize:EventTrackerSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the event tracker.
	EventTrackerArn *string `json:"personalize:EventTrackerSummary:EventTrackerArn" locationName:"eventTrackerArn" type:"string"`

	// The date and time (in Unix time) that the event tracker was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:EventTrackerSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the event tracker.
	Name *string `json:"personalize:EventTrackerSummary:Name" locationName:"name" min:"1" type:"string"`

	// The status of the event tracker.
	//
	// An event tracker can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:EventTrackerSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s EventTrackerSummary) String() string {
	return awsutil.Prettify(s)
}

// Provides feature transformation information. Feature transformation is the
// process of modifying raw input data into a form more suitable for model training.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/FeatureTransformation
type FeatureTransformation struct {
	_ struct{} `type:"structure"`

	// The creation date and time (in Unix time) of the feature transformation.
	CreationDateTime *time.Time `json:"personalize:FeatureTransformation:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// Provides the default parameters for feature transformation.
	DefaultParameters map[string]string `json:"personalize:FeatureTransformation:DefaultParameters" locationName:"defaultParameters" type:"map"`

	// The Amazon Resource Name (ARN) of the FeatureTransformation object.
	FeatureTransformationArn *string `json:"personalize:FeatureTransformation:FeatureTransformationArn" locationName:"featureTransformationArn" type:"string"`

	// The last update date and time (in Unix time) of the feature transformation.
	LastUpdatedDateTime *time.Time `json:"personalize:FeatureTransformation:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the feature transformation.
	Name *string `json:"personalize:FeatureTransformation:Name" locationName:"name" min:"1" type:"string"`

	// The status of the feature transformation.
	//
	// A feature transformation can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	Status *string `json:"personalize:FeatureTransformation:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s FeatureTransformation) String() string {
	return awsutil.Prettify(s)
}

// Describes the properties for hyperparameter optimization (HPO). For use with
// the bring-your-own-recipe feature. Do not use for Amazon Personalize native
// recipes.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/HPOConfig
type HPOConfig struct {
	_ struct{} `type:"structure"`

	// The hyperparameters and their allowable ranges.
	AlgorithmHyperParameterRanges *HyperParameterRanges `json:"personalize:HPOConfig:AlgorithmHyperParameterRanges" locationName:"algorithmHyperParameterRanges" type:"structure"`

	// The metric to optimize during HPO.
	HpoObjective *HPOObjective `json:"personalize:HPOConfig:HpoObjective" locationName:"hpoObjective" type:"structure"`

	// Describes the resource configuration for HPO.
	HpoResourceConfig *HPOResourceConfig `json:"personalize:HPOConfig:HpoResourceConfig" locationName:"hpoResourceConfig" type:"structure"`
}

// String returns the string representation
func (s HPOConfig) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *HPOConfig) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "HPOConfig"}
	if s.AlgorithmHyperParameterRanges != nil {
		if err := s.AlgorithmHyperParameterRanges.Validate(); err != nil {
			invalidParams.AddNested("AlgorithmHyperParameterRanges", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The metric to optimize during hyperparameter optimization (HPO).
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/HPOObjective
type HPOObjective struct {
	_ struct{} `type:"structure"`

	// The name of the metric.
	MetricName *string `json:"personalize:HPOObjective:MetricName" locationName:"metricName" type:"string"`

	// A regular expression for finding the metric in the training job logs.
	MetricRegex *string `json:"personalize:HPOObjective:MetricRegex" locationName:"metricRegex" type:"string"`

	// The data type of the metric.
	Type *string `json:"personalize:HPOObjective:Type" locationName:"type" type:"string"`
}

// String returns the string representation
func (s HPOObjective) String() string {
	return awsutil.Prettify(s)
}

// Describes the resource configuration for hyperparameter optimization (HPO).
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/HPOResourceConfig
type HPOResourceConfig struct {
	_ struct{} `type:"structure"`

	// The maximum number of training jobs.
	MaxNumberOfTrainingJobs *string `json:"personalize:HPOResourceConfig:MaxNumberOfTrainingJobs" locationName:"maxNumberOfTrainingJobs" type:"string"`

	// The maximum number of parallel training jobs.
	MaxParallelTrainingJobs *string `json:"personalize:HPOResourceConfig:MaxParallelTrainingJobs" locationName:"maxParallelTrainingJobs" type:"string"`
}

// String returns the string representation
func (s HPOResourceConfig) String() string {
	return awsutil.Prettify(s)
}

// Specifies the hyperparameters and their ranges. Hyperparameters can be categorical,
// continuous, or integer-valued.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/HyperParameterRanges
type HyperParameterRanges struct {
	_ struct{} `type:"structure"`

	// The categorical hyperparameters and their ranges.
	CategoricalHyperParameterRanges []CategoricalHyperParameterRange `json:"personalize:HyperParameterRanges:CategoricalHyperParameterRanges" locationName:"categoricalHyperParameterRanges" type:"list"`

	// The continuous hyperparameters and their ranges.
	ContinuousHyperParameterRanges []ContinuousHyperParameterRange `json:"personalize:HyperParameterRanges:ContinuousHyperParameterRanges" locationName:"continuousHyperParameterRanges" type:"list"`

	// The integer-valued hyperparameters and their ranges.
	IntegerHyperParameterRanges []IntegerHyperParameterRange `json:"personalize:HyperParameterRanges:IntegerHyperParameterRanges" locationName:"integerHyperParameterRanges" type:"list"`
}

// String returns the string representation
func (s HyperParameterRanges) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *HyperParameterRanges) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "HyperParameterRanges"}
	if s.ContinuousHyperParameterRanges != nil {
		for i, v := range s.ContinuousHyperParameterRanges {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "ContinuousHyperParameterRanges", i), err.(aws.ErrInvalidParams))
			}
		}
	}
	if s.IntegerHyperParameterRanges != nil {
		for i, v := range s.IntegerHyperParameterRanges {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "IntegerHyperParameterRanges", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Provides the name and range of an integer-valued hyperparameter.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/IntegerHyperParameterRange
type IntegerHyperParameterRange struct {
	_ struct{} `type:"structure"`

	// The maximum allowable value for the hyperparameter.
	MaxValue *int64 `json:"personalize:IntegerHyperParameterRange:MaxValue" locationName:"maxValue" type:"integer"`

	// The minimum allowable value for the hyperparameter.
	MinValue *int64 `json:"personalize:IntegerHyperParameterRange:MinValue" locationName:"minValue" type:"integer"`

	// The name of the hyperparameter.
	Name *string `json:"personalize:IntegerHyperParameterRange:Name" locationName:"name" type:"string"`
}

// String returns the string representation
func (s IntegerHyperParameterRange) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *IntegerHyperParameterRange) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "IntegerHyperParameterRange"}
	if s.MinValue != nil && *s.MinValue < -1e+06 {
		invalidParams.Add(aws.NewErrParamMinValue("MinValue", -1e+06))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Provides information about a recipe. Each recipe provides an algorithm that
// Amazon Personalize uses in model training when you use the CreateSolution
// operation.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/Recipe
type Recipe struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the algorithm that Amazon Personalize uses
	// to train the model.
	AlgorithmArn *string `json:"personalize:Recipe:AlgorithmArn" locationName:"algorithmArn" type:"string"`

	// The date and time (in Unix format) that the recipe was created.
	CreationDateTime *time.Time `json:"personalize:Recipe:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The description of the recipe.
	Description *string `json:"personalize:Recipe:Description" locationName:"description" type:"string"`

	// The ARN of the FeatureTransformation object.
	FeatureTransformationArn *string `json:"personalize:Recipe:FeatureTransformationArn" locationName:"featureTransformationArn" type:"string"`

	// The date and time (in Unix format) that the recipe was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:Recipe:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the recipe.
	Name *string `json:"personalize:Recipe:Name" locationName:"name" min:"1" type:"string"`

	// The Amazon Resource Name (ARN) of the recipe.
	RecipeArn *string `json:"personalize:Recipe:RecipeArn" locationName:"recipeArn" type:"string"`

	// One of the following values:
	//
	//    * PERSONALIZED_RANKING
	//
	//    * RELATED_ITEMS
	//
	//    * USER_PERSONALIZATION
	RecipeType *string `json:"personalize:Recipe:RecipeType" locationName:"recipeType" type:"string"`

	// The status of the recipe.
	Status *string `json:"personalize:Recipe:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s Recipe) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of a recipe. For a complete listing,
// call the DescribeRecipe API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/RecipeSummary
type RecipeSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the recipe was created.
	CreationDateTime *time.Time `json:"personalize:RecipeSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The date and time (in Unix time) that the recipe was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:RecipeSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the recipe.
	Name *string `json:"personalize:RecipeSummary:Name" locationName:"name" min:"1" type:"string"`

	// The Amazon Resource Name (ARN) of the recipe.
	RecipeArn *string `json:"personalize:RecipeSummary:RecipeArn" locationName:"recipeArn" type:"string"`

	// The status of the recipe.
	Status *string `json:"personalize:RecipeSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s RecipeSummary) String() string {
	return awsutil.Prettify(s)
}

// An object that provides information about a solution. A solution is a trained
// model that can be deployed as a campaign.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/Solution
type Solution struct {
	_ struct{} `type:"structure"`

	// When performAutoML is true, specifies the best recipe found.
	AutoMLResult *AutoMLResult `json:"personalize:Solution:AutoMLResult" locationName:"autoMLResult" type:"structure"`

	// The creation date and time (in Unix time) of the solution.
	CreationDateTime *time.Time `json:"personalize:Solution:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the dataset group that provides the training
	// data.
	DatasetGroupArn *string `json:"personalize:Solution:DatasetGroupArn" locationName:"datasetGroupArn" type:"string"`

	// The event type (for example, 'click' or 'like') that is used for training
	// the model.
	EventType *string `json:"personalize:Solution:EventType" locationName:"eventType" type:"string"`

	// The date and time (in Unix time) that the solution was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:Solution:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// Describes the latest version of the solution, including the status and the
	// ARN.
	LatestSolutionVersion *SolutionVersionSummary `json:"personalize:Solution:LatestSolutionVersion" locationName:"latestSolutionVersion" type:"structure"`

	// The name of the solution.
	Name *string `json:"personalize:Solution:Name" locationName:"name" min:"1" type:"string"`

	// When true, Amazon Personalize performs a search for the best USER_PERSONALIZATION
	// recipe from the list specified in the solution configuration (recipeArn must
	// not be specified). When false (the default), Amazon Personalize uses recipeArn
	// for training.
	PerformAutoML *bool `json:"personalize:Solution:PerformAutoML" locationName:"performAutoML" type:"boolean"`

	// Whether to perform hyperparameter optimization (HPO) on the chosen recipe.
	// The default is false.
	PerformHPO *bool `json:"personalize:Solution:PerformHPO" locationName:"performHPO" type:"boolean"`

	// The ARN of the recipe used to create the solution.
	RecipeArn *string `json:"personalize:Solution:RecipeArn" locationName:"recipeArn" type:"string"`

	// The ARN of the solution.
	SolutionArn *string `json:"personalize:Solution:SolutionArn" locationName:"solutionArn" type:"string"`

	// Describes the configuration properties for the solution.
	SolutionConfig *SolutionConfig `json:"personalize:Solution:SolutionConfig" locationName:"solutionConfig" type:"structure"`

	// The status of the solution.
	//
	// A solution can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:Solution:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s Solution) String() string {
	return awsutil.Prettify(s)
}

// Describes the configuration properties for the solution.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/SolutionConfig
type SolutionConfig struct {
	_ struct{} `type:"structure"`

	// Lists the hyperparameter names and ranges.
	AlgorithmHyperParameters map[string]string `json:"personalize:SolutionConfig:AlgorithmHyperParameters" locationName:"algorithmHyperParameters" type:"map"`

	// The AutoMLConfig object containing a list of recipes to search when AutoML
	// is performed.
	AutoMLConfig *AutoMLConfig `json:"personalize:SolutionConfig:AutoMLConfig" locationName:"autoMLConfig" type:"structure"`

	// Only events with a value greater than or equal to this threshold are used
	// for training a model.
	EventValueThreshold *string `json:"personalize:SolutionConfig:EventValueThreshold" locationName:"eventValueThreshold" type:"string"`

	// Lists the feature transformation parameters.
	FeatureTransformationParameters map[string]string `json:"personalize:SolutionConfig:FeatureTransformationParameters" locationName:"featureTransformationParameters" type:"map"`

	// Describes the properties for hyperparameter optimization (HPO). For use with
	// the bring-your-own-recipe feature. Not used with Amazon Personalize predefined
	// recipes.
	HpoConfig *HPOConfig `json:"personalize:SolutionConfig:HpoConfig" locationName:"hpoConfig" type:"structure"`
}

// String returns the string representation
func (s SolutionConfig) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SolutionConfig) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "SolutionConfig"}
	if s.HpoConfig != nil {
		if err := s.HpoConfig.Validate(); err != nil {
			invalidParams.AddNested("HpoConfig", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Provides a summary of the properties of a solution. For a complete listing,
// call the DescribeSolution API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/SolutionSummary
type SolutionSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that the solution was created.
	CreationDateTime *time.Time `json:"personalize:SolutionSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The date and time (in Unix time) that the solution was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:SolutionSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The name of the solution.
	Name *string `json:"personalize:SolutionSummary:Name" locationName:"name" min:"1" type:"string"`

	// The Amazon Resource Name (ARN) of the solution.
	SolutionArn *string `json:"personalize:SolutionSummary:SolutionArn" locationName:"solutionArn" type:"string"`

	// The status of the solution.
	//
	// A solution can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	//
	//    * DELETE PENDING > DELETE IN_PROGRESS
	Status *string `json:"personalize:SolutionSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s SolutionSummary) String() string {
	return awsutil.Prettify(s)
}

// An object that provides information about a specific version of a Solution.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/SolutionVersion
type SolutionVersion struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that this version of the solution was created.
	CreationDateTime *time.Time `json:"personalize:SolutionVersion:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the dataset group providing the training
	// data.
	DatasetGroupArn *string `json:"personalize:SolutionVersion:DatasetGroupArn" locationName:"datasetGroupArn" type:"string"`

	// The event type (for example, 'click' or 'like') that is used for training
	// the model.
	EventType *string `json:"personalize:SolutionVersion:EventType" locationName:"eventType" type:"string"`

	// If training a solution version fails, the reason behind the failure.
	FailureReason *string `json:"personalize:SolutionVersion:FailureReason" locationName:"failureReason" type:"string"`

	// The date and time (in Unix time) that the solution was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:SolutionVersion:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// When true, Amazon Personalize performs a search for the most optimal recipe
	// according to the solution configuration. When false (the default), Amazon
	// Personalize uses recipeArn.
	PerformAutoML *bool `json:"personalize:SolutionVersion:PerformAutoML" locationName:"performAutoML" type:"boolean"`

	// Whether to perform hyperparameter optimization (HPO) on the chosen recipe.
	// The default is false.
	PerformHPO *bool `json:"personalize:SolutionVersion:PerformHPO" locationName:"performHPO" type:"boolean"`

	// The ARN of the recipe used in the solution.
	RecipeArn *string `json:"personalize:SolutionVersion:RecipeArn" locationName:"recipeArn" type:"string"`

	// The ARN of the solution.
	SolutionArn *string `json:"personalize:SolutionVersion:SolutionArn" locationName:"solutionArn" type:"string"`

	// Describes the configuration properties for the solution.
	SolutionConfig *SolutionConfig `json:"personalize:SolutionVersion:SolutionConfig" locationName:"solutionConfig" type:"structure"`

	// The ARN of the solution version.
	SolutionVersionArn *string `json:"personalize:SolutionVersion:SolutionVersionArn" locationName:"solutionVersionArn" type:"string"`

	// The status of the solution version.
	//
	// A solution version can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	Status *string `json:"personalize:SolutionVersion:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s SolutionVersion) String() string {
	return awsutil.Prettify(s)
}

// Provides a summary of the properties of a solution version. For a complete
// listing, call the DescribeSolutionVersion API.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/personalize-2018-05-22/SolutionVersionSummary
type SolutionVersionSummary struct {
	_ struct{} `type:"structure"`

	// The date and time (in Unix time) that this version of a solution was created.
	CreationDateTime *time.Time `json:"personalize:SolutionVersionSummary:CreationDateTime" locationName:"creationDateTime" type:"timestamp" timestampFormat:"unix"`

	// If a solution version fails, the reason behind the failure.
	FailureReason *string `json:"personalize:SolutionVersionSummary:FailureReason" locationName:"failureReason" type:"string"`

	// The date and time (in Unix time) that the solution version was last updated.
	LastUpdatedDateTime *time.Time `json:"personalize:SolutionVersionSummary:LastUpdatedDateTime" locationName:"lastUpdatedDateTime" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the solution version.
	SolutionVersionArn *string `json:"personalize:SolutionVersionSummary:SolutionVersionArn" locationName:"solutionVersionArn" type:"string"`

	// The status of the solution version.
	//
	// A solution version can be in one of the following states:
	//
	//    * CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED
	Status *string `json:"personalize:SolutionVersionSummary:Status" locationName:"status" type:"string"`
}

// String returns the string representation
func (s SolutionVersionSummary) String() string {
	return awsutil.Prettify(s)
}
