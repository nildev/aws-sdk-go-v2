// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitoidentityprovider

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

var _ aws.Config
var _ = awsutil.Prettify

// Account takeover action type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AccountTakeoverActionType
type AccountTakeoverActionType struct {
	_ struct{} `type:"structure"`

	// The event action.
	//
	//    * BLOCK Choosing this action will block the request.
	//
	//    * MFA_IF_CONFIGURED Throw MFA challenge if user has configured it, else
	//    allow the request.
	//
	//    * MFA_REQUIRED Throw MFA challenge if user has configured it, else block
	//    the request.
	//
	//    * NO_ACTION Allow the user sign-in.
	//
	// EventAction is a required field
	EventAction AccountTakeoverEventActionType `json:"cognito-idp:AccountTakeoverActionType:EventAction" type:"string" required:"true" enum:"true"`

	// Flag specifying whether to send a notification.
	//
	// Notify is a required field
	Notify *bool `json:"cognito-idp:AccountTakeoverActionType:Notify" type:"boolean" required:"true"`
}

// String returns the string representation
func (s AccountTakeoverActionType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AccountTakeoverActionType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AccountTakeoverActionType"}
	if len(s.EventAction) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("EventAction"))
	}

	if s.Notify == nil {
		invalidParams.Add(aws.NewErrParamRequired("Notify"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Account takeover actions type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AccountTakeoverActionsType
type AccountTakeoverActionsType struct {
	_ struct{} `type:"structure"`

	// Action to take for a high risk.
	HighAction *AccountTakeoverActionType `json:"cognito-idp:AccountTakeoverActionsType:HighAction" type:"structure"`

	// Action to take for a low risk.
	LowAction *AccountTakeoverActionType `json:"cognito-idp:AccountTakeoverActionsType:LowAction" type:"structure"`

	// Action to take for a medium risk.
	MediumAction *AccountTakeoverActionType `json:"cognito-idp:AccountTakeoverActionsType:MediumAction" type:"structure"`
}

// String returns the string representation
func (s AccountTakeoverActionsType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AccountTakeoverActionsType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AccountTakeoverActionsType"}
	if s.HighAction != nil {
		if err := s.HighAction.Validate(); err != nil {
			invalidParams.AddNested("HighAction", err.(aws.ErrInvalidParams))
		}
	}
	if s.LowAction != nil {
		if err := s.LowAction.Validate(); err != nil {
			invalidParams.AddNested("LowAction", err.(aws.ErrInvalidParams))
		}
	}
	if s.MediumAction != nil {
		if err := s.MediumAction.Validate(); err != nil {
			invalidParams.AddNested("MediumAction", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Configuration for mitigation actions and notification for different levels
// of risk detected for a potential account takeover.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AccountTakeoverRiskConfigurationType
type AccountTakeoverRiskConfigurationType struct {
	_ struct{} `type:"structure"`

	// Account takeover risk configuration actions
	//
	// Actions is a required field
	Actions *AccountTakeoverActionsType `json:"cognito-idp:AccountTakeoverRiskConfigurationType:Actions" type:"structure" required:"true"`

	// The notify configuration used to construct email notifications.
	NotifyConfiguration *NotifyConfigurationType `json:"cognito-idp:AccountTakeoverRiskConfigurationType:NotifyConfiguration" type:"structure"`
}

// String returns the string representation
func (s AccountTakeoverRiskConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AccountTakeoverRiskConfigurationType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AccountTakeoverRiskConfigurationType"}

	if s.Actions == nil {
		invalidParams.Add(aws.NewErrParamRequired("Actions"))
	}
	if s.Actions != nil {
		if err := s.Actions.Validate(); err != nil {
			invalidParams.AddNested("Actions", err.(aws.ErrInvalidParams))
		}
	}
	if s.NotifyConfiguration != nil {
		if err := s.NotifyConfiguration.Validate(); err != nil {
			invalidParams.AddNested("NotifyConfiguration", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The configuration for creating a new user profile.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminCreateUserConfigType
type AdminCreateUserConfigType struct {
	_ struct{} `type:"structure"`

	// Set to True if only the administrator is allowed to create user profiles.
	// Set to False if users can sign themselves up via an app.
	AllowAdminCreateUserOnly *bool `json:"cognito-idp:AdminCreateUserConfigType:AllowAdminCreateUserOnly" type:"boolean"`

	// The message template to be used for the welcome message to new users.
	//
	// See also Customizing User Invitation Messages (http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization).
	InviteMessageTemplate *MessageTemplateType `json:"cognito-idp:AdminCreateUserConfigType:InviteMessageTemplate" type:"structure"`

	// The user account expiration limit, in days, after which the account is no
	// longer usable. To reset the account after that time limit, you must call
	// AdminCreateUser again, specifying "RESEND" for the MessageAction parameter.
	// The default value for this parameter is 7.
	//
	// If you set a value for TemporaryPasswordValidityDays in PasswordPolicy, that
	// value will be used and UnusedAccountValidityDays will be deprecated for that
	// user pool.
	UnusedAccountValidityDays *int64 `json:"cognito-idp:AdminCreateUserConfigType:UnusedAccountValidityDays" type:"integer"`
}

// String returns the string representation
func (s AdminCreateUserConfigType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AdminCreateUserConfigType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AdminCreateUserConfigType"}
	if s.InviteMessageTemplate != nil {
		if err := s.InviteMessageTemplate.Validate(); err != nil {
			invalidParams.AddNested("InviteMessageTemplate", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The Amazon Pinpoint analytics configuration for collecting metrics for a
// user pool.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AnalyticsConfigurationType
type AnalyticsConfigurationType struct {
	_ struct{} `type:"structure"`

	// The application ID for an Amazon Pinpoint application.
	//
	// ApplicationId is a required field
	ApplicationId *string `json:"cognito-idp:AnalyticsConfigurationType:ApplicationId" type:"string" required:"true"`

	// The external ID.
	//
	// ExternalId is a required field
	ExternalId *string `json:"cognito-idp:AnalyticsConfigurationType:ExternalId" type:"string" required:"true"`

	// The ARN of an IAM role that authorizes Amazon Cognito to publish events to
	// Amazon Pinpoint analytics.
	//
	// RoleArn is a required field
	RoleArn *string `json:"cognito-idp:AnalyticsConfigurationType:RoleArn" min:"20" type:"string" required:"true"`

	// If UserDataShared is true, Amazon Cognito will include user data in the events
	// it publishes to Amazon Pinpoint analytics.
	UserDataShared *bool `json:"cognito-idp:AnalyticsConfigurationType:UserDataShared" type:"boolean"`
}

// String returns the string representation
func (s AnalyticsConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AnalyticsConfigurationType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AnalyticsConfigurationType"}

	if s.ApplicationId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ApplicationId"))
	}

	if s.ExternalId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ExternalId"))
	}

	if s.RoleArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("RoleArn"))
	}
	if s.RoleArn != nil && len(*s.RoleArn) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("RoleArn", 20))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// An Amazon Pinpoint analytics endpoint.
//
// An endpoint uniquely identifies a mobile device, email address, or phone
// number that can receive messages from Amazon Pinpoint analytics.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AnalyticsMetadataType
type AnalyticsMetadataType struct {
	_ struct{} `type:"structure"`

	// The endpoint ID.
	AnalyticsEndpointId *string `json:"cognito-idp:AnalyticsMetadataType:AnalyticsEndpointId" type:"string"`
}

// String returns the string representation
func (s AnalyticsMetadataType) String() string {
	return awsutil.Prettify(s)
}

// Specifies whether the attribute is standard or custom.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AttributeType
type AttributeType struct {
	_ struct{} `type:"structure"`

	// The name of the attribute.
	//
	// Name is a required field
	Name *string `json:"cognito-idp:AttributeType:Name" min:"1" type:"string" required:"true"`

	// The value of the attribute.
	Value *string `json:"cognito-idp:AttributeType:Value" type:"string"`
}

// String returns the string representation
func (s AttributeType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AttributeType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "AttributeType"}

	if s.Name == nil {
		invalidParams.Add(aws.NewErrParamRequired("Name"))
	}
	if s.Name != nil && len(*s.Name) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Name", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The authentication event type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AuthEventType
type AuthEventType struct {
	_ struct{} `type:"structure"`

	// The challenge responses.
	ChallengeResponses []ChallengeResponseType `json:"cognito-idp:AuthEventType:ChallengeResponses" type:"list"`

	// The creation date
	CreationDate *time.Time `json:"cognito-idp:AuthEventType:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// The user context data captured at the time of an event request. It provides
	// additional information about the client from which event the request is received.
	EventContextData *EventContextDataType `json:"cognito-idp:AuthEventType:EventContextData" type:"structure"`

	// A flag specifying the user feedback captured at the time of an event request
	// is good or bad.
	EventFeedback *EventFeedbackType `json:"cognito-idp:AuthEventType:EventFeedback" type:"structure"`

	// The event ID.
	EventId *string `json:"cognito-idp:AuthEventType:EventId" type:"string"`

	// The event response.
	EventResponse EventResponseType `json:"cognito-idp:AuthEventType:EventResponse" type:"string" enum:"true"`

	// The event risk.
	EventRisk *EventRiskType `json:"cognito-idp:AuthEventType:EventRisk" type:"structure"`

	// The event type.
	EventType EventType `json:"cognito-idp:AuthEventType:EventType" type:"string" enum:"true"`
}

// String returns the string representation
func (s AuthEventType) String() string {
	return awsutil.Prettify(s)
}

// The authentication result.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AuthenticationResultType
type AuthenticationResultType struct {
	_ struct{} `type:"structure"`

	// The access token.
	AccessToken *string `json:"cognito-idp:AuthenticationResultType:AccessToken" type:"string"`

	// The expiration period of the authentication result in seconds.
	ExpiresIn *int64 `json:"cognito-idp:AuthenticationResultType:ExpiresIn" type:"integer"`

	// The ID token.
	IdToken *string `json:"cognito-idp:AuthenticationResultType:IdToken" type:"string"`

	// The new device metadata from an authentication result.
	NewDeviceMetadata *NewDeviceMetadataType `json:"cognito-idp:AuthenticationResultType:NewDeviceMetadata" type:"structure"`

	// The refresh token.
	RefreshToken *string `json:"cognito-idp:AuthenticationResultType:RefreshToken" type:"string"`

	// The token type.
	TokenType *string `json:"cognito-idp:AuthenticationResultType:TokenType" type:"string"`
}

// String returns the string representation
func (s AuthenticationResultType) String() string {
	return awsutil.Prettify(s)
}

// The challenge response type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ChallengeResponseType
type ChallengeResponseType struct {
	_ struct{} `type:"structure"`

	// The challenge name
	ChallengeName ChallengeName `json:"cognito-idp:ChallengeResponseType:ChallengeName" type:"string" enum:"true"`

	// The challenge response.
	ChallengeResponse ChallengeResponse `json:"cognito-idp:ChallengeResponseType:ChallengeResponse" type:"string" enum:"true"`
}

// String returns the string representation
func (s ChallengeResponseType) String() string {
	return awsutil.Prettify(s)
}

// The code delivery details being returned from the server.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CodeDeliveryDetailsType
type CodeDeliveryDetailsType struct {
	_ struct{} `type:"structure"`

	// The attribute name.
	AttributeName *string `json:"cognito-idp:CodeDeliveryDetailsType:AttributeName" min:"1" type:"string"`

	// The delivery medium (email message or phone number).
	DeliveryMedium DeliveryMediumType `json:"cognito-idp:CodeDeliveryDetailsType:DeliveryMedium" type:"string" enum:"true"`

	// The destination for the code delivery details.
	Destination *string `json:"cognito-idp:CodeDeliveryDetailsType:Destination" type:"string"`
}

// String returns the string representation
func (s CodeDeliveryDetailsType) String() string {
	return awsutil.Prettify(s)
}

// The compromised credentials actions type
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CompromisedCredentialsActionsType
type CompromisedCredentialsActionsType struct {
	_ struct{} `type:"structure"`

	// The event action.
	//
	// EventAction is a required field
	EventAction CompromisedCredentialsEventActionType `json:"cognito-idp:CompromisedCredentialsActionsType:EventAction" type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s CompromisedCredentialsActionsType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CompromisedCredentialsActionsType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CompromisedCredentialsActionsType"}
	if len(s.EventAction) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("EventAction"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The compromised credentials risk configuration type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CompromisedCredentialsRiskConfigurationType
type CompromisedCredentialsRiskConfigurationType struct {
	_ struct{} `type:"structure"`

	// The compromised credentials risk configuration actions.
	//
	// Actions is a required field
	Actions *CompromisedCredentialsActionsType `json:"cognito-idp:CompromisedCredentialsRiskConfigurationType:Actions" type:"structure" required:"true"`

	// Perform the action for these events. The default is to perform all events
	// if no event filter is specified.
	EventFilter []EventFilterType `json:"cognito-idp:CompromisedCredentialsRiskConfigurationType:EventFilter" type:"list"`
}

// String returns the string representation
func (s CompromisedCredentialsRiskConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CompromisedCredentialsRiskConfigurationType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CompromisedCredentialsRiskConfigurationType"}

	if s.Actions == nil {
		invalidParams.Add(aws.NewErrParamRequired("Actions"))
	}
	if s.Actions != nil {
		if err := s.Actions.Validate(); err != nil {
			invalidParams.AddNested("Actions", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Contextual user data type used for evaluating the risk of an unexpected event
// by Amazon Cognito advanced security.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ContextDataType
type ContextDataType struct {
	_ struct{} `type:"structure"`

	// Encoded data containing device fingerprinting details, collected using the
	// Amazon Cognito context data collection library.
	EncodedData *string `json:"cognito-idp:ContextDataType:EncodedData" type:"string"`

	// HttpHeaders received on your server in same order.
	//
	// HttpHeaders is a required field
	HttpHeaders []HttpHeader `json:"cognito-idp:ContextDataType:HttpHeaders" type:"list" required:"true"`

	// Source IP address of your user.
	//
	// IpAddress is a required field
	IpAddress *string `json:"cognito-idp:ContextDataType:IpAddress" type:"string" required:"true"`

	// Your server endpoint where this API is invoked.
	//
	// ServerName is a required field
	ServerName *string `json:"cognito-idp:ContextDataType:ServerName" type:"string" required:"true"`

	// Your server path where this API is invoked.
	//
	// ServerPath is a required field
	ServerPath *string `json:"cognito-idp:ContextDataType:ServerPath" type:"string" required:"true"`
}

// String returns the string representation
func (s ContextDataType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ContextDataType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ContextDataType"}

	if s.HttpHeaders == nil {
		invalidParams.Add(aws.NewErrParamRequired("HttpHeaders"))
	}

	if s.IpAddress == nil {
		invalidParams.Add(aws.NewErrParamRequired("IpAddress"))
	}

	if s.ServerName == nil {
		invalidParams.Add(aws.NewErrParamRequired("ServerName"))
	}

	if s.ServerPath == nil {
		invalidParams.Add(aws.NewErrParamRequired("ServerPath"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The configuration for a custom domain that hosts the sign-up and sign-in
// webpages for your application.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/CustomDomainConfigType
type CustomDomainConfigType struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of an AWS Certificate Manager SSL certificate.
	// You use this certificate for the subdomain of your custom domain.
	//
	// CertificateArn is a required field
	CertificateArn *string `json:"cognito-idp:CustomDomainConfigType:CertificateArn" min:"20" type:"string" required:"true"`
}

// String returns the string representation
func (s CustomDomainConfigType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CustomDomainConfigType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CustomDomainConfigType"}

	if s.CertificateArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("CertificateArn"))
	}
	if s.CertificateArn != nil && len(*s.CertificateArn) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("CertificateArn", 20))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The configuration for the user pool's device tracking.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeviceConfigurationType
type DeviceConfigurationType struct {
	_ struct{} `type:"structure"`

	// Indicates whether a challenge is required on a new device. Only applicable
	// to a new device.
	ChallengeRequiredOnNewDevice *bool `json:"cognito-idp:DeviceConfigurationType:ChallengeRequiredOnNewDevice" type:"boolean"`

	// If true, a device is only remembered on user prompt.
	DeviceOnlyRememberedOnUserPrompt *bool `json:"cognito-idp:DeviceConfigurationType:DeviceOnlyRememberedOnUserPrompt" type:"boolean"`
}

// String returns the string representation
func (s DeviceConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// The device verifier against which it will be authenticated.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeviceSecretVerifierConfigType
type DeviceSecretVerifierConfigType struct {
	_ struct{} `type:"structure"`

	// The password verifier.
	PasswordVerifier *string `json:"cognito-idp:DeviceSecretVerifierConfigType:PasswordVerifier" type:"string"`

	// The salt.
	Salt *string `json:"cognito-idp:DeviceSecretVerifierConfigType:Salt" type:"string"`
}

// String returns the string representation
func (s DeviceSecretVerifierConfigType) String() string {
	return awsutil.Prettify(s)
}

// The device type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DeviceType
type DeviceType struct {
	_ struct{} `type:"structure"`

	// The device attributes.
	DeviceAttributes []AttributeType `json:"cognito-idp:DeviceType:DeviceAttributes" type:"list"`

	// The creation date of the device.
	DeviceCreateDate *time.Time `json:"cognito-idp:DeviceType:DeviceCreateDate" type:"timestamp" timestampFormat:"unix"`

	// The device key.
	DeviceKey *string `json:"cognito-idp:DeviceType:DeviceKey" min:"1" type:"string"`

	// The date in which the device was last authenticated.
	DeviceLastAuthenticatedDate *time.Time `json:"cognito-idp:DeviceType:DeviceLastAuthenticatedDate" type:"timestamp" timestampFormat:"unix"`

	// The last modified date of the device.
	DeviceLastModifiedDate *time.Time `json:"cognito-idp:DeviceType:DeviceLastModifiedDate" type:"timestamp" timestampFormat:"unix"`
}

// String returns the string representation
func (s DeviceType) String() string {
	return awsutil.Prettify(s)
}

// A container for information about a domain.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/DomainDescriptionType
type DomainDescriptionType struct {
	_ struct{} `type:"structure"`

	// The AWS account ID for the user pool owner.
	AWSAccountId *string `json:"cognito-idp:DomainDescriptionType:AWSAccountId" type:"string"`

	// The ARN of the CloudFront distribution.
	CloudFrontDistribution *string `json:"cognito-idp:DomainDescriptionType:CloudFrontDistribution" type:"string"`

	// The configuration for a custom domain that hosts the sign-up and sign-in
	// webpages for your application.
	CustomDomainConfig *CustomDomainConfigType `json:"cognito-idp:DomainDescriptionType:CustomDomainConfig" type:"structure"`

	// The domain string.
	Domain *string `json:"cognito-idp:DomainDescriptionType:Domain" min:"1" type:"string"`

	// The S3 bucket where the static files for this domain are stored.
	S3Bucket *string `json:"cognito-idp:DomainDescriptionType:S3Bucket" min:"3" type:"string"`

	// The domain status.
	Status DomainStatusType `json:"cognito-idp:DomainDescriptionType:Status" type:"string" enum:"true"`

	// The user pool ID.
	UserPoolId *string `json:"cognito-idp:DomainDescriptionType:UserPoolId" min:"1" type:"string"`

	// The app version.
	Version *string `json:"cognito-idp:DomainDescriptionType:Version" min:"1" type:"string"`
}

// String returns the string representation
func (s DomainDescriptionType) String() string {
	return awsutil.Prettify(s)
}

// The email configuration type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/EmailConfigurationType
type EmailConfigurationType struct {
	_ struct{} `type:"structure"`

	// Specifies whether Amazon Cognito emails your users by using its built-in
	// email functionality or your Amazon SES email configuration. Specify one of
	// the following values:
	//
	// COGNITO_DEFAULT
	//
	// When Amazon Cognito emails your users, it uses its built-in email functionality.
	// When you use the default option, Amazon Cognito allows only a limited number
	// of emails each day for your user pool. For typical production environments,
	// the default email limit is below the required delivery volume. To achieve
	// a higher delivery volume, specify DEVELOPER to use your Amazon SES email
	// configuration.
	//
	// To look up the email delivery limit for the default option, see Limits in
	// Amazon Cognito (https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html)
	// in the Amazon Cognito Developer Guide.
	//
	// The default FROM address is no-reply@verificationemail.com. To customize
	// the FROM address, provide the ARN of an Amazon SES verified email address
	// for the SourceArn parameter.
	//
	// DEVELOPER
	//
	// When Amazon Cognito emails your users, it uses your Amazon SES configuration.
	// Amazon Cognito calls Amazon SES on your behalf to send email from your verified
	// email address. When you use this option, the email delivery limits are the
	// same limits that apply to your Amazon SES verified email address in your
	// AWS account.
	//
	// If you use this option, you must provide the ARN of an Amazon SES verified
	// email address for the SourceArn parameter.
	//
	// Before Amazon Cognito can email your users, it requires additional permissions
	// to call Amazon SES on your behalf. When you update your user pool with this
	// option, Amazon Cognito creates a service-linked role, which is a type of
	// IAM role, in your AWS account. This role contains the permissions that allow
	// Amazon Cognito to access Amazon SES and send email messages with your address.
	// For more information about the service-linked role that Amazon Cognito creates,
	// see Using Service-Linked Roles for Amazon Cognito (https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html)
	// in the Amazon Cognito Developer Guide.
	EmailSendingAccount EmailSendingAccountType `json:"cognito-idp:EmailConfigurationType:EmailSendingAccount" type:"string" enum:"true"`

	// The destination to which the receiver of the email should reply to.
	ReplyToEmailAddress *string `json:"cognito-idp:EmailConfigurationType:ReplyToEmailAddress" type:"string"`

	// The Amazon Resource Name (ARN) of a verified email address in Amazon SES.
	// This email address is used in one of the following ways, depending on the
	// value that you specify for the EmailSendingAccount parameter:
	//
	//    * If you specify COGNITO_DEFAULT, Amazon Cognito uses this address as
	//    the custom FROM address when it emails your users by using its built-in
	//    email account.
	//
	//    * If you specify DEVELOPER, Amazon Cognito emails your users with this
	//    address by calling Amazon SES on your behalf.
	SourceArn *string `json:"cognito-idp:EmailConfigurationType:SourceArn" min:"20" type:"string"`
}

// String returns the string representation
func (s EmailConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *EmailConfigurationType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "EmailConfigurationType"}
	if s.SourceArn != nil && len(*s.SourceArn) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("SourceArn", 20))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Specifies the user context data captured at the time of an event request.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/EventContextDataType
type EventContextDataType struct {
	_ struct{} `type:"structure"`

	// The user's city.
	City *string `json:"cognito-idp:EventContextDataType:City" type:"string"`

	// The user's country.
	Country *string `json:"cognito-idp:EventContextDataType:Country" type:"string"`

	// The user's device name.
	DeviceName *string `json:"cognito-idp:EventContextDataType:DeviceName" type:"string"`

	// The user's IP address.
	IpAddress *string `json:"cognito-idp:EventContextDataType:IpAddress" type:"string"`

	// The user's time zone.
	Timezone *string `json:"cognito-idp:EventContextDataType:Timezone" type:"string"`
}

// String returns the string representation
func (s EventContextDataType) String() string {
	return awsutil.Prettify(s)
}

// Specifies the event feedback type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/EventFeedbackType
type EventFeedbackType struct {
	_ struct{} `type:"structure"`

	// The event feedback date.
	FeedbackDate *time.Time `json:"cognito-idp:EventFeedbackType:FeedbackDate" type:"timestamp" timestampFormat:"unix"`

	// The event feedback value.
	//
	// FeedbackValue is a required field
	FeedbackValue FeedbackValueType `json:"cognito-idp:EventFeedbackType:FeedbackValue" type:"string" required:"true" enum:"true"`

	// The provider.
	//
	// Provider is a required field
	Provider *string `json:"cognito-idp:EventFeedbackType:Provider" type:"string" required:"true"`
}

// String returns the string representation
func (s EventFeedbackType) String() string {
	return awsutil.Prettify(s)
}

// The event risk type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/EventRiskType
type EventRiskType struct {
	_ struct{} `type:"structure"`

	// The risk decision.
	RiskDecision RiskDecisionType `json:"cognito-idp:EventRiskType:RiskDecision" type:"string" enum:"true"`

	// The risk level.
	RiskLevel RiskLevelType `json:"cognito-idp:EventRiskType:RiskLevel" type:"string" enum:"true"`
}

// String returns the string representation
func (s EventRiskType) String() string {
	return awsutil.Prettify(s)
}

// The group type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/GroupType
type GroupType struct {
	_ struct{} `type:"structure"`

	// The date the group was created.
	CreationDate *time.Time `json:"cognito-idp:GroupType:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// A string containing the description of the group.
	Description *string `json:"cognito-idp:GroupType:Description" type:"string"`

	// The name of the group.
	GroupName *string `json:"cognito-idp:GroupType:GroupName" min:"1" type:"string"`

	// The date the group was last modified.
	LastModifiedDate *time.Time `json:"cognito-idp:GroupType:LastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// A nonnegative integer value that specifies the precedence of this group relative
	// to the other groups that a user can belong to in the user pool. If a user
	// belongs to two or more groups, it is the group with the highest precedence
	// whose role ARN will be used in the cognito:roles and cognito:preferred_role
	// claims in the user's tokens. Groups with higher Precedence values take precedence
	// over groups with lower Precedence values or with null Precedence values.
	//
	// Two groups can have the same Precedence value. If this happens, neither group
	// takes precedence over the other. If two groups with the same Precedence have
	// the same role ARN, that role is used in the cognito:preferred_role claim
	// in tokens for users in each group. If the two groups have different role
	// ARNs, the cognito:preferred_role claim is not set in users' tokens.
	//
	// The default Precedence value is null.
	Precedence *int64 `json:"cognito-idp:GroupType:Precedence" type:"integer"`

	// The role ARN for the group.
	RoleArn *string `json:"cognito-idp:GroupType:RoleArn" min:"20" type:"string"`

	// The user pool ID for the user pool.
	UserPoolId *string `json:"cognito-idp:GroupType:UserPoolId" min:"1" type:"string"`
}

// String returns the string representation
func (s GroupType) String() string {
	return awsutil.Prettify(s)
}

// The HTTP header.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/HttpHeader
type HttpHeader struct {
	_ struct{} `type:"structure"`

	// The header name
	HeaderName *string `json:"cognito-idp:HttpHeader:HeaderName" locationName:"headerName" type:"string"`

	// The header value.
	HeaderValue *string `json:"cognito-idp:HttpHeader:HeaderValue" locationName:"headerValue" type:"string"`
}

// String returns the string representation
func (s HttpHeader) String() string {
	return awsutil.Prettify(s)
}

// A container for information about an identity provider.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/IdentityProviderType
type IdentityProviderType struct {
	_ struct{} `type:"structure"`

	// A mapping of identity provider attributes to standard and custom user pool
	// attributes.
	AttributeMapping map[string]string `json:"cognito-idp:IdentityProviderType:AttributeMapping" type:"map"`

	// The date the identity provider was created.
	CreationDate *time.Time `json:"cognito-idp:IdentityProviderType:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// A list of identity provider identifiers.
	IdpIdentifiers []string `json:"cognito-idp:IdentityProviderType:IdpIdentifiers" type:"list"`

	// The date the identity provider was last modified.
	LastModifiedDate *time.Time `json:"cognito-idp:IdentityProviderType:LastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// The identity provider details, such as MetadataURL and MetadataFile.
	ProviderDetails map[string]string `json:"cognito-idp:IdentityProviderType:ProviderDetails" type:"map"`

	// The identity provider name.
	ProviderName *string `json:"cognito-idp:IdentityProviderType:ProviderName" min:"1" type:"string"`

	// The identity provider type.
	ProviderType IdentityProviderTypeType `json:"cognito-idp:IdentityProviderType:ProviderType" type:"string" enum:"true"`

	// The user pool ID.
	UserPoolId *string `json:"cognito-idp:IdentityProviderType:UserPoolId" min:"1" type:"string"`
}

// String returns the string representation
func (s IdentityProviderType) String() string {
	return awsutil.Prettify(s)
}

// Specifies the configuration for AWS Lambda triggers.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/LambdaConfigType
type LambdaConfigType struct {
	_ struct{} `type:"structure"`

	// Creates an authentication challenge.
	CreateAuthChallenge *string `json:"cognito-idp:LambdaConfigType:CreateAuthChallenge" min:"20" type:"string"`

	// A custom Message AWS Lambda trigger.
	CustomMessage *string `json:"cognito-idp:LambdaConfigType:CustomMessage" min:"20" type:"string"`

	// Defines the authentication challenge.
	DefineAuthChallenge *string `json:"cognito-idp:LambdaConfigType:DefineAuthChallenge" min:"20" type:"string"`

	// A post-authentication AWS Lambda trigger.
	PostAuthentication *string `json:"cognito-idp:LambdaConfigType:PostAuthentication" min:"20" type:"string"`

	// A post-confirmation AWS Lambda trigger.
	PostConfirmation *string `json:"cognito-idp:LambdaConfigType:PostConfirmation" min:"20" type:"string"`

	// A pre-authentication AWS Lambda trigger.
	PreAuthentication *string `json:"cognito-idp:LambdaConfigType:PreAuthentication" min:"20" type:"string"`

	// A pre-registration AWS Lambda trigger.
	PreSignUp *string `json:"cognito-idp:LambdaConfigType:PreSignUp" min:"20" type:"string"`

	// A Lambda trigger that is invoked before token generation.
	PreTokenGeneration *string `json:"cognito-idp:LambdaConfigType:PreTokenGeneration" min:"20" type:"string"`

	// The user migration Lambda config type.
	UserMigration *string `json:"cognito-idp:LambdaConfigType:UserMigration" min:"20" type:"string"`

	// Verifies the authentication challenge response.
	VerifyAuthChallengeResponse *string `json:"cognito-idp:LambdaConfigType:VerifyAuthChallengeResponse" min:"20" type:"string"`
}

// String returns the string representation
func (s LambdaConfigType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *LambdaConfigType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "LambdaConfigType"}
	if s.CreateAuthChallenge != nil && len(*s.CreateAuthChallenge) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("CreateAuthChallenge", 20))
	}
	if s.CustomMessage != nil && len(*s.CustomMessage) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("CustomMessage", 20))
	}
	if s.DefineAuthChallenge != nil && len(*s.DefineAuthChallenge) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("DefineAuthChallenge", 20))
	}
	if s.PostAuthentication != nil && len(*s.PostAuthentication) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("PostAuthentication", 20))
	}
	if s.PostConfirmation != nil && len(*s.PostConfirmation) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("PostConfirmation", 20))
	}
	if s.PreAuthentication != nil && len(*s.PreAuthentication) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("PreAuthentication", 20))
	}
	if s.PreSignUp != nil && len(*s.PreSignUp) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("PreSignUp", 20))
	}
	if s.PreTokenGeneration != nil && len(*s.PreTokenGeneration) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("PreTokenGeneration", 20))
	}
	if s.UserMigration != nil && len(*s.UserMigration) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("UserMigration", 20))
	}
	if s.VerifyAuthChallengeResponse != nil && len(*s.VerifyAuthChallengeResponse) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("VerifyAuthChallengeResponse", 20))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Specifies the different settings for multi-factor authentication (MFA).
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/MFAOptionType
type MFAOptionType struct {
	_ struct{} `type:"structure"`

	// The attribute name of the MFA option type.
	AttributeName *string `json:"cognito-idp:MFAOptionType:AttributeName" min:"1" type:"string"`

	// The delivery medium (email message or SMS message) to send the MFA code.
	DeliveryMedium DeliveryMediumType `json:"cognito-idp:MFAOptionType:DeliveryMedium" type:"string" enum:"true"`
}

// String returns the string representation
func (s MFAOptionType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *MFAOptionType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "MFAOptionType"}
	if s.AttributeName != nil && len(*s.AttributeName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("AttributeName", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The message template structure.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/MessageTemplateType
type MessageTemplateType struct {
	_ struct{} `type:"structure"`

	// The message template for email messages.
	EmailMessage *string `json:"cognito-idp:MessageTemplateType:EmailMessage" min:"6" type:"string"`

	// The subject line for email messages.
	EmailSubject *string `json:"cognito-idp:MessageTemplateType:EmailSubject" min:"1" type:"string"`

	// The message template for SMS messages.
	SMSMessage *string `json:"cognito-idp:MessageTemplateType:SMSMessage" min:"6" type:"string"`
}

// String returns the string representation
func (s MessageTemplateType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *MessageTemplateType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "MessageTemplateType"}
	if s.EmailMessage != nil && len(*s.EmailMessage) < 6 {
		invalidParams.Add(aws.NewErrParamMinLen("EmailMessage", 6))
	}
	if s.EmailSubject != nil && len(*s.EmailSubject) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("EmailSubject", 1))
	}
	if s.SMSMessage != nil && len(*s.SMSMessage) < 6 {
		invalidParams.Add(aws.NewErrParamMinLen("SMSMessage", 6))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The new device metadata type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/NewDeviceMetadataType
type NewDeviceMetadataType struct {
	_ struct{} `type:"structure"`

	// The device group key.
	DeviceGroupKey *string `json:"cognito-idp:NewDeviceMetadataType:DeviceGroupKey" type:"string"`

	// The device key.
	DeviceKey *string `json:"cognito-idp:NewDeviceMetadataType:DeviceKey" min:"1" type:"string"`
}

// String returns the string representation
func (s NewDeviceMetadataType) String() string {
	return awsutil.Prettify(s)
}

// The notify configuration type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/NotifyConfigurationType
type NotifyConfigurationType struct {
	_ struct{} `type:"structure"`

	// Email template used when a detected risk event is blocked.
	BlockEmail *NotifyEmailType `json:"cognito-idp:NotifyConfigurationType:BlockEmail" type:"structure"`

	// The email address that is sending the email. It must be either individually
	// verified with Amazon SES, or from a domain that has been verified with Amazon
	// SES.
	From *string `json:"cognito-idp:NotifyConfigurationType:From" type:"string"`

	// The MFA email template used when MFA is challenged as part of a detected
	// risk.
	MfaEmail *NotifyEmailType `json:"cognito-idp:NotifyConfigurationType:MfaEmail" type:"structure"`

	// The email template used when a detected risk event is allowed.
	NoActionEmail *NotifyEmailType `json:"cognito-idp:NotifyConfigurationType:NoActionEmail" type:"structure"`

	// The destination to which the receiver of an email should reply to.
	ReplyTo *string `json:"cognito-idp:NotifyConfigurationType:ReplyTo" type:"string"`

	// The Amazon Resource Name (ARN) of the identity that is associated with the
	// sending authorization policy. It permits Amazon Cognito to send for the email
	// address specified in the From parameter.
	//
	// SourceArn is a required field
	SourceArn *string `json:"cognito-idp:NotifyConfigurationType:SourceArn" min:"20" type:"string" required:"true"`
}

// String returns the string representation
func (s NotifyConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *NotifyConfigurationType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "NotifyConfigurationType"}

	if s.SourceArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("SourceArn"))
	}
	if s.SourceArn != nil && len(*s.SourceArn) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("SourceArn", 20))
	}
	if s.BlockEmail != nil {
		if err := s.BlockEmail.Validate(); err != nil {
			invalidParams.AddNested("BlockEmail", err.(aws.ErrInvalidParams))
		}
	}
	if s.MfaEmail != nil {
		if err := s.MfaEmail.Validate(); err != nil {
			invalidParams.AddNested("MfaEmail", err.(aws.ErrInvalidParams))
		}
	}
	if s.NoActionEmail != nil {
		if err := s.NoActionEmail.Validate(); err != nil {
			invalidParams.AddNested("NoActionEmail", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The notify email type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/NotifyEmailType
type NotifyEmailType struct {
	_ struct{} `type:"structure"`

	// The HTML body.
	HtmlBody *string `json:"cognito-idp:NotifyEmailType:HtmlBody" min:"6" type:"string"`

	// The subject.
	//
	// Subject is a required field
	Subject *string `json:"cognito-idp:NotifyEmailType:Subject" min:"1" type:"string" required:"true"`

	// The text body.
	TextBody *string `json:"cognito-idp:NotifyEmailType:TextBody" min:"6" type:"string"`
}

// String returns the string representation
func (s NotifyEmailType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *NotifyEmailType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "NotifyEmailType"}
	if s.HtmlBody != nil && len(*s.HtmlBody) < 6 {
		invalidParams.Add(aws.NewErrParamMinLen("HtmlBody", 6))
	}

	if s.Subject == nil {
		invalidParams.Add(aws.NewErrParamRequired("Subject"))
	}
	if s.Subject != nil && len(*s.Subject) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Subject", 1))
	}
	if s.TextBody != nil && len(*s.TextBody) < 6 {
		invalidParams.Add(aws.NewErrParamMinLen("TextBody", 6))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The minimum and maximum value of an attribute that is of the number data
// type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/NumberAttributeConstraintsType
type NumberAttributeConstraintsType struct {
	_ struct{} `type:"structure"`

	// The maximum value of an attribute that is of the number data type.
	MaxValue *string `json:"cognito-idp:NumberAttributeConstraintsType:MaxValue" type:"string"`

	// The minimum value of an attribute that is of the number data type.
	MinValue *string `json:"cognito-idp:NumberAttributeConstraintsType:MinValue" type:"string"`
}

// String returns the string representation
func (s NumberAttributeConstraintsType) String() string {
	return awsutil.Prettify(s)
}

// The password policy type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/PasswordPolicyType
type PasswordPolicyType struct {
	_ struct{} `type:"structure"`

	// The minimum length of the password policy that you have set. Cannot be less
	// than 6.
	MinimumLength *int64 `json:"cognito-idp:PasswordPolicyType:MinimumLength" min:"6" type:"integer"`

	// In the password policy that you have set, refers to whether you have required
	// users to use at least one lowercase letter in their password.
	RequireLowercase *bool `json:"cognito-idp:PasswordPolicyType:RequireLowercase" type:"boolean"`

	// In the password policy that you have set, refers to whether you have required
	// users to use at least one number in their password.
	RequireNumbers *bool `json:"cognito-idp:PasswordPolicyType:RequireNumbers" type:"boolean"`

	// In the password policy that you have set, refers to whether you have required
	// users to use at least one symbol in their password.
	RequireSymbols *bool `json:"cognito-idp:PasswordPolicyType:RequireSymbols" type:"boolean"`

	// In the password policy that you have set, refers to whether you have required
	// users to use at least one uppercase letter in their password.
	RequireUppercase *bool `json:"cognito-idp:PasswordPolicyType:RequireUppercase" type:"boolean"`

	TemporaryPasswordValidityDays *int64 `json:"cognito-idp:PasswordPolicyType:TemporaryPasswordValidityDays" type:"integer"`
}

// String returns the string representation
func (s PasswordPolicyType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *PasswordPolicyType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "PasswordPolicyType"}
	if s.MinimumLength != nil && *s.MinimumLength < 6 {
		invalidParams.Add(aws.NewErrParamMinValue("MinimumLength", 6))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// A container for identity provider details.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ProviderDescription
type ProviderDescription struct {
	_ struct{} `type:"structure"`

	// The date the provider was added to the user pool.
	CreationDate *time.Time `json:"cognito-idp:ProviderDescription:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// The date the provider was last modified.
	LastModifiedDate *time.Time `json:"cognito-idp:ProviderDescription:LastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// The identity provider name.
	ProviderName *string `json:"cognito-idp:ProviderDescription:ProviderName" min:"1" type:"string"`

	// The identity provider type.
	ProviderType IdentityProviderTypeType `json:"cognito-idp:ProviderDescription:ProviderType" type:"string" enum:"true"`
}

// String returns the string representation
func (s ProviderDescription) String() string {
	return awsutil.Prettify(s)
}

// A container for information about an identity provider for a user pool.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ProviderUserIdentifierType
type ProviderUserIdentifierType struct {
	_ struct{} `type:"structure"`

	// The name of the provider attribute to link to, for example, NameID.
	ProviderAttributeName *string `json:"cognito-idp:ProviderUserIdentifierType:ProviderAttributeName" type:"string"`

	// The value of the provider attribute to link to, for example, xxxxx_account.
	ProviderAttributeValue *string `json:"cognito-idp:ProviderUserIdentifierType:ProviderAttributeValue" type:"string"`

	// The name of the provider, for example, Facebook, Google, or Login with Amazon.
	ProviderName *string `json:"cognito-idp:ProviderUserIdentifierType:ProviderName" min:"1" type:"string"`
}

// String returns the string representation
func (s ProviderUserIdentifierType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ProviderUserIdentifierType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ProviderUserIdentifierType"}
	if s.ProviderName != nil && len(*s.ProviderName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ProviderName", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// A resource server scope.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResourceServerScopeType
type ResourceServerScopeType struct {
	_ struct{} `type:"structure"`

	// A description of the scope.
	//
	// ScopeDescription is a required field
	ScopeDescription *string `json:"cognito-idp:ResourceServerScopeType:ScopeDescription" min:"1" type:"string" required:"true"`

	// The name of the scope.
	//
	// ScopeName is a required field
	ScopeName *string `json:"cognito-idp:ResourceServerScopeType:ScopeName" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s ResourceServerScopeType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ResourceServerScopeType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ResourceServerScopeType"}

	if s.ScopeDescription == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScopeDescription"))
	}
	if s.ScopeDescription != nil && len(*s.ScopeDescription) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ScopeDescription", 1))
	}

	if s.ScopeName == nil {
		invalidParams.Add(aws.NewErrParamRequired("ScopeName"))
	}
	if s.ScopeName != nil && len(*s.ScopeName) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("ScopeName", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// A container for information about a resource server for a user pool.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/ResourceServerType
type ResourceServerType struct {
	_ struct{} `type:"structure"`

	// The identifier for the resource server.
	Identifier *string `json:"cognito-idp:ResourceServerType:Identifier" min:"1" type:"string"`

	// The name of the resource server.
	Name *string `json:"cognito-idp:ResourceServerType:Name" min:"1" type:"string"`

	// A list of scopes that are defined for the resource server.
	Scopes []ResourceServerScopeType `json:"cognito-idp:ResourceServerType:Scopes" type:"list"`

	// The user pool ID for the user pool that hosts the resource server.
	UserPoolId *string `json:"cognito-idp:ResourceServerType:UserPoolId" min:"1" type:"string"`
}

// String returns the string representation
func (s ResourceServerType) String() string {
	return awsutil.Prettify(s)
}

// The risk configuration type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RiskConfigurationType
type RiskConfigurationType struct {
	_ struct{} `type:"structure"`

	// The account takeover risk configuration object including the NotifyConfiguration
	// object and Actions to take in the case of an account takeover.
	AccountTakeoverRiskConfiguration *AccountTakeoverRiskConfigurationType `json:"cognito-idp:RiskConfigurationType:AccountTakeoverRiskConfiguration" type:"structure"`

	// The app client ID.
	ClientId *string `json:"cognito-idp:RiskConfigurationType:ClientId" min:"1" type:"string"`

	// The compromised credentials risk configuration object including the EventFilter
	// and the EventAction
	CompromisedCredentialsRiskConfiguration *CompromisedCredentialsRiskConfigurationType `json:"cognito-idp:RiskConfigurationType:CompromisedCredentialsRiskConfiguration" type:"structure"`

	// The last modified date.
	LastModifiedDate *time.Time `json:"cognito-idp:RiskConfigurationType:LastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// The configuration to override the risk decision.
	RiskExceptionConfiguration *RiskExceptionConfigurationType `json:"cognito-idp:RiskConfigurationType:RiskExceptionConfiguration" type:"structure"`

	// The user pool ID.
	UserPoolId *string `json:"cognito-idp:RiskConfigurationType:UserPoolId" min:"1" type:"string"`
}

// String returns the string representation
func (s RiskConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// The type of the configuration to override the risk decision.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/RiskExceptionConfigurationType
type RiskExceptionConfigurationType struct {
	_ struct{} `type:"structure"`

	// Overrides the risk decision to always block the pre-authentication requests.
	// The IP range is in CIDR notation: a compact representation of an IP address
	// and its associated routing prefix.
	BlockedIPRangeList []string `json:"cognito-idp:RiskExceptionConfigurationType:BlockedIPRangeList" type:"list"`

	// Risk detection is not performed on the IP addresses in the range list. The
	// IP range is in CIDR notation.
	SkippedIPRangeList []string `json:"cognito-idp:RiskExceptionConfigurationType:SkippedIPRangeList" type:"list"`
}

// String returns the string representation
func (s RiskExceptionConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// The SMS multi-factor authentication (MFA) settings type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SMSMfaSettingsType
type SMSMfaSettingsType struct {
	_ struct{} `type:"structure"`

	// Specifies whether SMS text message MFA is enabled.
	Enabled *bool `json:"cognito-idp:SMSMfaSettingsType:Enabled" type:"boolean"`

	// The preferred MFA method.
	PreferredMfa *bool `json:"cognito-idp:SMSMfaSettingsType:PreferredMfa" type:"boolean"`
}

// String returns the string representation
func (s SMSMfaSettingsType) String() string {
	return awsutil.Prettify(s)
}

// Contains information about the schema attribute.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SchemaAttributeType
type SchemaAttributeType struct {
	_ struct{} `type:"structure"`

	// The attribute data type.
	AttributeDataType AttributeDataType `json:"cognito-idp:SchemaAttributeType:AttributeDataType" type:"string" enum:"true"`

	// Specifies whether the attribute type is developer only.
	DeveloperOnlyAttribute *bool `json:"cognito-idp:SchemaAttributeType:DeveloperOnlyAttribute" type:"boolean"`

	// Specifies whether the value of the attribute can be changed.
	//
	// For any user pool attribute that's mapped to an identity provider attribute,
	// you must set this parameter to true. Amazon Cognito updates mapped attributes
	// when users sign in to your application through an identity provider. If an
	// attribute is immutable, Amazon Cognito throws an error when it attempts to
	// update the attribute. For more information, see Specifying Identity Provider
	// Attribute Mappings for Your User Pool (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html).
	Mutable *bool `json:"cognito-idp:SchemaAttributeType:Mutable" type:"boolean"`

	// A schema attribute of the name type.
	Name *string `json:"cognito-idp:SchemaAttributeType:Name" min:"1" type:"string"`

	// Specifies the constraints for an attribute of the number type.
	NumberAttributeConstraints *NumberAttributeConstraintsType `json:"cognito-idp:SchemaAttributeType:NumberAttributeConstraints" type:"structure"`

	// Specifies whether a user pool attribute is required. If the attribute is
	// required and the user does not provide a value, registration or sign-in will
	// fail.
	Required *bool `json:"cognito-idp:SchemaAttributeType:Required" type:"boolean"`

	// Specifies the constraints for an attribute of the string type.
	StringAttributeConstraints *StringAttributeConstraintsType `json:"cognito-idp:SchemaAttributeType:StringAttributeConstraints" type:"structure"`
}

// String returns the string representation
func (s SchemaAttributeType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SchemaAttributeType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "SchemaAttributeType"}
	if s.Name != nil && len(*s.Name) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("Name", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The SMS configuration type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SmsConfigurationType
type SmsConfigurationType struct {
	_ struct{} `type:"structure"`

	// The external ID.
	ExternalId *string `json:"cognito-idp:SmsConfigurationType:ExternalId" type:"string"`

	// The Amazon Resource Name (ARN) of the Amazon Simple Notification Service
	// (SNS) caller.
	//
	// SnsCallerArn is a required field
	SnsCallerArn *string `json:"cognito-idp:SmsConfigurationType:SnsCallerArn" min:"20" type:"string" required:"true"`
}

// String returns the string representation
func (s SmsConfigurationType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SmsConfigurationType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "SmsConfigurationType"}

	if s.SnsCallerArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("SnsCallerArn"))
	}
	if s.SnsCallerArn != nil && len(*s.SnsCallerArn) < 20 {
		invalidParams.Add(aws.NewErrParamMinLen("SnsCallerArn", 20))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The SMS text message multi-factor authentication (MFA) configuration type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SmsMfaConfigType
type SmsMfaConfigType struct {
	_ struct{} `type:"structure"`

	// The SMS authentication message.
	SmsAuthenticationMessage *string `json:"cognito-idp:SmsMfaConfigType:SmsAuthenticationMessage" min:"6" type:"string"`

	// The SMS configuration.
	SmsConfiguration *SmsConfigurationType `json:"cognito-idp:SmsMfaConfigType:SmsConfiguration" type:"structure"`
}

// String returns the string representation
func (s SmsMfaConfigType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SmsMfaConfigType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "SmsMfaConfigType"}
	if s.SmsAuthenticationMessage != nil && len(*s.SmsAuthenticationMessage) < 6 {
		invalidParams.Add(aws.NewErrParamMinLen("SmsAuthenticationMessage", 6))
	}
	if s.SmsConfiguration != nil {
		if err := s.SmsConfiguration.Validate(); err != nil {
			invalidParams.AddNested("SmsConfiguration", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The type used for enabling software token MFA at the user pool level.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SoftwareTokenMfaConfigType
type SoftwareTokenMfaConfigType struct {
	_ struct{} `type:"structure"`

	// Specifies whether software token MFA is enabled.
	Enabled *bool `json:"cognito-idp:SoftwareTokenMfaConfigType:Enabled" type:"boolean"`
}

// String returns the string representation
func (s SoftwareTokenMfaConfigType) String() string {
	return awsutil.Prettify(s)
}

// The type used for enabling software token MFA at the user level.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/SoftwareTokenMfaSettingsType
type SoftwareTokenMfaSettingsType struct {
	_ struct{} `type:"structure"`

	// Specifies whether software token MFA is enabled.
	Enabled *bool `json:"cognito-idp:SoftwareTokenMfaSettingsType:Enabled" type:"boolean"`

	// The preferred MFA method.
	PreferredMfa *bool `json:"cognito-idp:SoftwareTokenMfaSettingsType:PreferredMfa" type:"boolean"`
}

// String returns the string representation
func (s SoftwareTokenMfaSettingsType) String() string {
	return awsutil.Prettify(s)
}

// The constraints associated with a string attribute.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/StringAttributeConstraintsType
type StringAttributeConstraintsType struct {
	_ struct{} `type:"structure"`

	// The maximum length.
	MaxLength *string `json:"cognito-idp:StringAttributeConstraintsType:MaxLength" type:"string"`

	// The minimum length.
	MinLength *string `json:"cognito-idp:StringAttributeConstraintsType:MinLength" type:"string"`
}

// String returns the string representation
func (s StringAttributeConstraintsType) String() string {
	return awsutil.Prettify(s)
}

// A container for the UI customization information for a user pool's built-in
// app UI.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UICustomizationType
type UICustomizationType struct {
	_ struct{} `type:"structure"`

	// The CSS values in the UI customization.
	CSS *string `json:"cognito-idp:UICustomizationType:CSS" type:"string"`

	// The CSS version number.
	CSSVersion *string `json:"cognito-idp:UICustomizationType:CSSVersion" type:"string"`

	// The client ID for the client app.
	ClientId *string `json:"cognito-idp:UICustomizationType:ClientId" min:"1" type:"string"`

	// The creation date for the UI customization.
	CreationDate *time.Time `json:"cognito-idp:UICustomizationType:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// The logo image for the UI customization.
	ImageUrl *string `json:"cognito-idp:UICustomizationType:ImageUrl" type:"string"`

	// The last-modified date for the UI customization.
	LastModifiedDate *time.Time `json:"cognito-idp:UICustomizationType:LastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// The user pool ID for the user pool.
	UserPoolId *string `json:"cognito-idp:UICustomizationType:UserPoolId" min:"1" type:"string"`
}

// String returns the string representation
func (s UICustomizationType) String() string {
	return awsutil.Prettify(s)
}

// Contextual data such as the user's device fingerprint, IP address, or location
// used for evaluating the risk of an unexpected event by Amazon Cognito advanced
// security.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserContextDataType
type UserContextDataType struct {
	_ struct{} `type:"structure"`

	// Contextual data such as the user's device fingerprint, IP address, or location
	// used for evaluating the risk of an unexpected event by Amazon Cognito advanced
	// security.
	EncodedData *string `json:"cognito-idp:UserContextDataType:EncodedData" type:"string"`
}

// String returns the string representation
func (s UserContextDataType) String() string {
	return awsutil.Prettify(s)
}

// The user import job type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserImportJobType
type UserImportJobType struct {
	_ struct{} `type:"structure"`

	// The role ARN for the Amazon CloudWatch Logging role for the user import job.
	// For more information, see "Creating the CloudWatch Logs IAM Role" in the
	// Amazon Cognito Developer Guide.
	CloudWatchLogsRoleArn *string `json:"cognito-idp:UserImportJobType:CloudWatchLogsRoleArn" min:"20" type:"string"`

	// The date when the user import job was completed.
	CompletionDate *time.Time `json:"cognito-idp:UserImportJobType:CompletionDate" type:"timestamp" timestampFormat:"unix"`

	// The message returned when the user import job is completed.
	CompletionMessage *string `json:"cognito-idp:UserImportJobType:CompletionMessage" min:"1" type:"string"`

	// The date the user import job was created.
	CreationDate *time.Time `json:"cognito-idp:UserImportJobType:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// The number of users that could not be imported.
	FailedUsers *int64 `json:"cognito-idp:UserImportJobType:FailedUsers" type:"long"`

	// The number of users that were successfully imported.
	ImportedUsers *int64 `json:"cognito-idp:UserImportJobType:ImportedUsers" type:"long"`

	// The job ID for the user import job.
	JobId *string `json:"cognito-idp:UserImportJobType:JobId" min:"1" type:"string"`

	// The job name for the user import job.
	JobName *string `json:"cognito-idp:UserImportJobType:JobName" min:"1" type:"string"`

	// The pre-signed URL to be used to upload the .csv file.
	PreSignedUrl *string `json:"cognito-idp:UserImportJobType:PreSignedUrl" type:"string"`

	// The number of users that were skipped.
	SkippedUsers *int64 `json:"cognito-idp:UserImportJobType:SkippedUsers" type:"long"`

	// The date when the user import job was started.
	StartDate *time.Time `json:"cognito-idp:UserImportJobType:StartDate" type:"timestamp" timestampFormat:"unix"`

	// The status of the user import job. One of the following:
	//
	//    * Created - The job was created but not started.
	//
	//    * Pending - A transition state. You have started the job, but it has not
	//    begun importing users yet.
	//
	//    * InProgress - The job has started, and users are being imported.
	//
	//    * Stopping - You have stopped the job, but the job has not stopped importing
	//    users yet.
	//
	//    * Stopped - You have stopped the job, and the job has stopped importing
	//    users.
	//
	//    * Succeeded - The job has completed successfully.
	//
	//    * Failed - The job has stopped due to an error.
	//
	//    * Expired - You created a job, but did not start the job within 24-48
	//    hours. All data associated with the job was deleted, and the job cannot
	//    be started.
	Status UserImportJobStatusType `json:"cognito-idp:UserImportJobType:Status" type:"string" enum:"true"`

	// The user pool ID for the user pool that the users are being imported into.
	UserPoolId *string `json:"cognito-idp:UserImportJobType:UserPoolId" min:"1" type:"string"`
}

// String returns the string representation
func (s UserImportJobType) String() string {
	return awsutil.Prettify(s)
}

// The user pool add-ons type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserPoolAddOnsType
type UserPoolAddOnsType struct {
	_ struct{} `type:"structure"`

	// The advanced security mode.
	//
	// AdvancedSecurityMode is a required field
	AdvancedSecurityMode AdvancedSecurityModeType `json:"cognito-idp:UserPoolAddOnsType:AdvancedSecurityMode" type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s UserPoolAddOnsType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UserPoolAddOnsType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UserPoolAddOnsType"}
	if len(s.AdvancedSecurityMode) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("AdvancedSecurityMode"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// The description of the user pool client.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserPoolClientDescription
type UserPoolClientDescription struct {
	_ struct{} `type:"structure"`

	// The ID of the client associated with the user pool.
	ClientId *string `json:"cognito-idp:UserPoolClientDescription:ClientId" min:"1" type:"string"`

	// The client name from the user pool client description.
	ClientName *string `json:"cognito-idp:UserPoolClientDescription:ClientName" min:"1" type:"string"`

	// The user pool ID for the user pool where you want to describe the user pool
	// client.
	UserPoolId *string `json:"cognito-idp:UserPoolClientDescription:UserPoolId" min:"1" type:"string"`
}

// String returns the string representation
func (s UserPoolClientDescription) String() string {
	return awsutil.Prettify(s)
}

// Contains information about a user pool client.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserPoolClientType
type UserPoolClientType struct {
	_ struct{} `type:"structure"`

	// Set to code to initiate a code grant flow, which provides an authorization
	// code as the response. This code can be exchanged for access tokens with the
	// token endpoint.
	//
	// Set to token to specify that the client should get the access token (and,
	// optionally, ID token, based on scopes) directly.
	AllowedOAuthFlows []OAuthFlowType `json:"cognito-idp:UserPoolClientType:AllowedOAuthFlows" type:"list"`

	// Set to TRUE if the client is allowed to follow the OAuth protocol when interacting
	// with Cognito user pools.
	AllowedOAuthFlowsUserPoolClient *bool `json:"cognito-idp:UserPoolClientType:AllowedOAuthFlowsUserPoolClient" type:"boolean"`

	// A list of allowed OAuth scopes. Currently supported values are "phone", "email",
	// "openid", and "Cognito".
	AllowedOAuthScopes []string `json:"cognito-idp:UserPoolClientType:AllowedOAuthScopes" type:"list"`

	// The Amazon Pinpoint analytics configuration for the user pool client.
	AnalyticsConfiguration *AnalyticsConfigurationType `json:"cognito-idp:UserPoolClientType:AnalyticsConfiguration" type:"structure"`

	// A list of allowed redirect (callback) URLs for the identity providers.
	//
	// A redirect URI must:
	//
	//    * Be an absolute URI.
	//
	//    * Be registered with the authorization server.
	//
	//    * Not include a fragment component.
	//
	// See OAuth 2.0 - Redirection Endpoint (https://tools.ietf.org/html/rfc6749#section-3.1.2).
	//
	// Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing
	// purposes only.
	//
	// App callback URLs such as myapp://example are also supported.
	CallbackURLs []string `json:"cognito-idp:UserPoolClientType:CallbackURLs" type:"list"`

	// The ID of the client associated with the user pool.
	ClientId *string `json:"cognito-idp:UserPoolClientType:ClientId" min:"1" type:"string"`

	// The client name from the user pool request of the client type.
	ClientName *string `json:"cognito-idp:UserPoolClientType:ClientName" min:"1" type:"string"`

	// The client secret from the user pool request of the client type.
	ClientSecret *string `json:"cognito-idp:UserPoolClientType:ClientSecret" min:"1" type:"string"`

	// The date the user pool client was created.
	CreationDate *time.Time `json:"cognito-idp:UserPoolClientType:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// The default redirect URI. Must be in the CallbackURLs list.
	//
	// A redirect URI must:
	//
	//    * Be an absolute URI.
	//
	//    * Be registered with the authorization server.
	//
	//    * Not include a fragment component.
	//
	// See OAuth 2.0 - Redirection Endpoint (https://tools.ietf.org/html/rfc6749#section-3.1.2).
	//
	// Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing
	// purposes only.
	//
	// App callback URLs such as myapp://example are also supported.
	DefaultRedirectURI *string `json:"cognito-idp:UserPoolClientType:DefaultRedirectURI" min:"1" type:"string"`

	// The explicit authentication flows.
	ExplicitAuthFlows []ExplicitAuthFlowsType `json:"cognito-idp:UserPoolClientType:ExplicitAuthFlows" type:"list"`

	// The date the user pool client was last modified.
	LastModifiedDate *time.Time `json:"cognito-idp:UserPoolClientType:LastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// A list of allowed logout URLs for the identity providers.
	LogoutURLs []string `json:"cognito-idp:UserPoolClientType:LogoutURLs" type:"list"`

	// The Read-only attributes.
	ReadAttributes []string `json:"cognito-idp:UserPoolClientType:ReadAttributes" type:"list"`

	// The time limit, in days, after which the refresh token is no longer valid
	// and cannot be used.
	RefreshTokenValidity *int64 `json:"cognito-idp:UserPoolClientType:RefreshTokenValidity" type:"integer"`

	// A list of provider names for the identity providers that are supported on
	// this client.
	SupportedIdentityProviders []string `json:"cognito-idp:UserPoolClientType:SupportedIdentityProviders" type:"list"`

	// The user pool ID for the user pool client.
	UserPoolId *string `json:"cognito-idp:UserPoolClientType:UserPoolId" min:"1" type:"string"`

	// The writeable attributes.
	WriteAttributes []string `json:"cognito-idp:UserPoolClientType:WriteAttributes" type:"list"`
}

// String returns the string representation
func (s UserPoolClientType) String() string {
	return awsutil.Prettify(s)
}

// A user pool description.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserPoolDescriptionType
type UserPoolDescriptionType struct {
	_ struct{} `type:"structure"`

	// The date the user pool description was created.
	CreationDate *time.Time `json:"cognito-idp:UserPoolDescriptionType:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// The ID in a user pool description.
	Id *string `json:"cognito-idp:UserPoolDescriptionType:Id" min:"1" type:"string"`

	// The AWS Lambda configuration information in a user pool description.
	LambdaConfig *LambdaConfigType `json:"cognito-idp:UserPoolDescriptionType:LambdaConfig" type:"structure"`

	// The date the user pool description was last modified.
	LastModifiedDate *time.Time `json:"cognito-idp:UserPoolDescriptionType:LastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// The name in a user pool description.
	Name *string `json:"cognito-idp:UserPoolDescriptionType:Name" min:"1" type:"string"`

	// The user pool status in a user pool description.
	Status StatusType `json:"cognito-idp:UserPoolDescriptionType:Status" type:"string" enum:"true"`
}

// String returns the string representation
func (s UserPoolDescriptionType) String() string {
	return awsutil.Prettify(s)
}

// The policy associated with a user pool.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserPoolPolicyType
type UserPoolPolicyType struct {
	_ struct{} `type:"structure"`

	// The password policy.
	PasswordPolicy *PasswordPolicyType `json:"cognito-idp:UserPoolPolicyType:PasswordPolicy" type:"structure"`
}

// String returns the string representation
func (s UserPoolPolicyType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UserPoolPolicyType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "UserPoolPolicyType"}
	if s.PasswordPolicy != nil {
		if err := s.PasswordPolicy.Validate(); err != nil {
			invalidParams.AddNested("PasswordPolicy", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// A container for information about the user pool.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserPoolType
type UserPoolType struct {
	_ struct{} `type:"structure"`

	// The configuration for AdminCreateUser requests.
	AdminCreateUserConfig *AdminCreateUserConfigType `json:"cognito-idp:UserPoolType:AdminCreateUserConfig" type:"structure"`

	// Specifies the attributes that are aliased in a user pool.
	AliasAttributes []AliasAttributeType `json:"cognito-idp:UserPoolType:AliasAttributes" type:"list"`

	// The Amazon Resource Name (ARN) for the user pool.
	Arn *string `json:"cognito-idp:UserPoolType:Arn" min:"20" type:"string"`

	// Specifies the attributes that are auto-verified in a user pool.
	AutoVerifiedAttributes []VerifiedAttributeType `json:"cognito-idp:UserPoolType:AutoVerifiedAttributes" type:"list"`

	// The date the user pool was created.
	CreationDate *time.Time `json:"cognito-idp:UserPoolType:CreationDate" type:"timestamp" timestampFormat:"unix"`

	// A custom domain name that you provide to Amazon Cognito. This parameter applies
	// only if you use a custom domain to host the sign-up and sign-in pages for
	// your application. For example: auth.example.com.
	//
	// For more information about adding a custom domain to your user pool, see
	// Using Your Own Domain for the Hosted UI (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html).
	CustomDomain *string `json:"cognito-idp:UserPoolType:CustomDomain" min:"1" type:"string"`

	// The device configuration.
	DeviceConfiguration *DeviceConfigurationType `json:"cognito-idp:UserPoolType:DeviceConfiguration" type:"structure"`

	// Holds the domain prefix if the user pool has a domain associated with it.
	Domain *string `json:"cognito-idp:UserPoolType:Domain" min:"1" type:"string"`

	// The email configuration.
	EmailConfiguration *EmailConfigurationType `json:"cognito-idp:UserPoolType:EmailConfiguration" type:"structure"`

	// The reason why the email configuration cannot send the messages to your users.
	EmailConfigurationFailure *string `json:"cognito-idp:UserPoolType:EmailConfigurationFailure" type:"string"`

	// The contents of the email verification message.
	EmailVerificationMessage *string `json:"cognito-idp:UserPoolType:EmailVerificationMessage" min:"6" type:"string"`

	// The subject of the email verification message.
	EmailVerificationSubject *string `json:"cognito-idp:UserPoolType:EmailVerificationSubject" min:"1" type:"string"`

	// A number estimating the size of the user pool.
	EstimatedNumberOfUsers *int64 `json:"cognito-idp:UserPoolType:EstimatedNumberOfUsers" type:"integer"`

	// The ID of the user pool.
	Id *string `json:"cognito-idp:UserPoolType:Id" min:"1" type:"string"`

	// The AWS Lambda triggers associated with the user pool.
	LambdaConfig *LambdaConfigType `json:"cognito-idp:UserPoolType:LambdaConfig" type:"structure"`

	// The date the user pool was last modified.
	LastModifiedDate *time.Time `json:"cognito-idp:UserPoolType:LastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// Can be one of the following values:
	//
	//    * OFF - MFA tokens are not required and cannot be specified during user
	//    registration.
	//
	//    * ON - MFA tokens are required for all user registrations. You can only
	//    specify required when you are initially creating a user pool.
	//
	//    * OPTIONAL - Users have the option when registering to create an MFA token.
	MfaConfiguration UserPoolMfaType `json:"cognito-idp:UserPoolType:MfaConfiguration" type:"string" enum:"true"`

	// The name of the user pool.
	Name *string `json:"cognito-idp:UserPoolType:Name" min:"1" type:"string"`

	// The policies associated with the user pool.
	Policies *UserPoolPolicyType `json:"cognito-idp:UserPoolType:Policies" type:"structure"`

	// A container with the schema attributes of a user pool.
	SchemaAttributes []SchemaAttributeType `json:"cognito-idp:UserPoolType:SchemaAttributes" min:"1" type:"list"`

	// The contents of the SMS authentication message.
	SmsAuthenticationMessage *string `json:"cognito-idp:UserPoolType:SmsAuthenticationMessage" min:"6" type:"string"`

	// The SMS configuration.
	SmsConfiguration *SmsConfigurationType `json:"cognito-idp:UserPoolType:SmsConfiguration" type:"structure"`

	// The reason why the SMS configuration cannot send the messages to your users.
	SmsConfigurationFailure *string `json:"cognito-idp:UserPoolType:SmsConfigurationFailure" type:"string"`

	// The contents of the SMS verification message.
	SmsVerificationMessage *string `json:"cognito-idp:UserPoolType:SmsVerificationMessage" min:"6" type:"string"`

	// The status of a user pool.
	Status StatusType `json:"cognito-idp:UserPoolType:Status" type:"string" enum:"true"`

	// The user pool add-ons.
	UserPoolAddOns *UserPoolAddOnsType `json:"cognito-idp:UserPoolType:UserPoolAddOns" type:"structure"`

	// The tags that are assigned to the user pool. A tag is a label that you can
	// apply to user pools to categorize and manage them in different ways, such
	// as by purpose, owner, environment, or other criteria.
	UserPoolTags map[string]string `json:"cognito-idp:UserPoolType:UserPoolTags" type:"map"`

	// Specifies whether email addresses or phone numbers can be specified as usernames
	// when a user signs up.
	UsernameAttributes []UsernameAttributeType `json:"cognito-idp:UserPoolType:UsernameAttributes" type:"list"`

	// The template for verification messages.
	VerificationMessageTemplate *VerificationMessageTemplateType `json:"cognito-idp:UserPoolType:VerificationMessageTemplate" type:"structure"`
}

// String returns the string representation
func (s UserPoolType) String() string {
	return awsutil.Prettify(s)
}

// The user type.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/UserType
type UserType struct {
	_ struct{} `type:"structure"`

	// A container with information about the user type attributes.
	Attributes []AttributeType `json:"cognito-idp:UserType:Attributes" type:"list"`

	// Specifies whether the user is enabled.
	Enabled *bool `json:"cognito-idp:UserType:Enabled" type:"boolean"`

	// The MFA options for the user.
	MFAOptions []MFAOptionType `json:"cognito-idp:UserType:MFAOptions" type:"list"`

	// The creation date of the user.
	UserCreateDate *time.Time `json:"cognito-idp:UserType:UserCreateDate" type:"timestamp" timestampFormat:"unix"`

	// The last modified date of the user.
	UserLastModifiedDate *time.Time `json:"cognito-idp:UserType:UserLastModifiedDate" type:"timestamp" timestampFormat:"unix"`

	// The user status. Can be one of the following:
	//
	//    * UNCONFIRMED - User has been created but not confirmed.
	//
	//    * CONFIRMED - User has been confirmed.
	//
	//    * ARCHIVED - User is no longer active.
	//
	//    * COMPROMISED - User is disabled due to a potential security threat.
	//
	//    * UNKNOWN - User status is not known.
	//
	//    * RESET_REQUIRED - User is confirmed, but the user must request a code
	//    and reset his or her password before he or she can sign in.
	//
	//    * FORCE_CHANGE_PASSWORD - The user is confirmed and the user can sign
	//    in using a temporary password, but on first sign-in, the user must change
	//    his or her password to a new value before doing anything else.
	UserStatus UserStatusType `json:"cognito-idp:UserType:UserStatus" type:"string" enum:"true"`

	// The user name of the user you wish to describe.
	Username *string `json:"cognito-idp:UserType:Username" min:"1" type:"string"`
}

// String returns the string representation
func (s UserType) String() string {
	return awsutil.Prettify(s)
}

// The template for verification messages.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/VerificationMessageTemplateType
type VerificationMessageTemplateType struct {
	_ struct{} `type:"structure"`

	// The default email option.
	DefaultEmailOption DefaultEmailOptionType `json:"cognito-idp:VerificationMessageTemplateType:DefaultEmailOption" type:"string" enum:"true"`

	// The email message template.
	EmailMessage *string `json:"cognito-idp:VerificationMessageTemplateType:EmailMessage" min:"6" type:"string"`

	// The email message template for sending a confirmation link to the user.
	EmailMessageByLink *string `json:"cognito-idp:VerificationMessageTemplateType:EmailMessageByLink" min:"6" type:"string"`

	// The subject line for the email message template.
	EmailSubject *string `json:"cognito-idp:VerificationMessageTemplateType:EmailSubject" min:"1" type:"string"`

	// The subject line for the email message template for sending a confirmation
	// link to the user.
	EmailSubjectByLink *string `json:"cognito-idp:VerificationMessageTemplateType:EmailSubjectByLink" min:"1" type:"string"`

	// The SMS message template.
	SmsMessage *string `json:"cognito-idp:VerificationMessageTemplateType:SmsMessage" min:"6" type:"string"`
}

// String returns the string representation
func (s VerificationMessageTemplateType) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *VerificationMessageTemplateType) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "VerificationMessageTemplateType"}
	if s.EmailMessage != nil && len(*s.EmailMessage) < 6 {
		invalidParams.Add(aws.NewErrParamMinLen("EmailMessage", 6))
	}
	if s.EmailMessageByLink != nil && len(*s.EmailMessageByLink) < 6 {
		invalidParams.Add(aws.NewErrParamMinLen("EmailMessageByLink", 6))
	}
	if s.EmailSubject != nil && len(*s.EmailSubject) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("EmailSubject", 1))
	}
	if s.EmailSubjectByLink != nil && len(*s.EmailSubjectByLink) < 1 {
		invalidParams.Add(aws.NewErrParamMinLen("EmailSubjectByLink", 1))
	}
	if s.SmsMessage != nil && len(*s.SmsMessage) < 6 {
		invalidParams.Add(aws.NewErrParamMinLen("SmsMessage", 6))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}
