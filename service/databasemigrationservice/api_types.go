// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package databasemigrationservice

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

var _ aws.Config
var _ = awsutil.Prettify

// Describes a quota for an AWS account, for example, the number of replication
// instances allowed.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/AccountQuota
type AccountQuota struct {
	_ struct{} `type:"structure"`

	// The name of the AWS DMS quota for this AWS account.
	AccountQuotaName *string `json:"dms:AccountQuota:AccountQuotaName" type:"string"`

	// The maximum allowed value for the quota.
	Max *int64 `json:"dms:AccountQuota:Max" type:"long"`

	// The amount currently used toward the quota maximum.
	Used *int64 `json:"dms:AccountQuota:Used" type:"long"`
}

// String returns the string representation
func (s AccountQuota) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/AvailabilityZone
type AvailabilityZone struct {
	_ struct{} `type:"structure"`

	// The name of the availability zone.
	Name *string `json:"dms:AvailabilityZone:Name" type:"string"`
}

// String returns the string representation
func (s AvailabilityZone) String() string {
	return awsutil.Prettify(s)
}

// The SSL certificate that can be used to encrypt connections between the endpoints
// and the replication instance.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/Certificate
type Certificate struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) for the certificate.
	CertificateArn *string `json:"dms:Certificate:CertificateArn" type:"string"`

	// The date that the certificate was created.
	CertificateCreationDate *time.Time `json:"dms:Certificate:CertificateCreationDate" type:"timestamp" timestampFormat:"unix"`

	// A customer-assigned name for the certificate. Identifiers must begin with
	// a letter; must contain only ASCII letters, digits, and hyphens; and must
	// not end with a hyphen or contain two consecutive hyphens.
	CertificateIdentifier *string `json:"dms:Certificate:CertificateIdentifier" type:"string"`

	// The owner of the certificate.
	CertificateOwner *string `json:"dms:Certificate:CertificateOwner" type:"string"`

	// The contents of a .pem file, which contains an X.509 certificate.
	CertificatePem *string `json:"dms:Certificate:CertificatePem" type:"string"`

	// The location of an imported Oracle Wallet certificate for use with SSL.
	//
	// CertificateWallet is automatically base64 encoded/decoded by the SDK.
	CertificateWallet []byte `json:"dms:Certificate:CertificateWallet" type:"blob"`

	// The key length of the cryptographic algorithm being used.
	KeyLength *int64 `json:"dms:Certificate:KeyLength" type:"integer"`

	// The signing algorithm for the certificate.
	SigningAlgorithm *string `json:"dms:Certificate:SigningAlgorithm" type:"string"`

	// The beginning date that the certificate is valid.
	ValidFromDate *time.Time `json:"dms:Certificate:ValidFromDate" type:"timestamp" timestampFormat:"unix"`

	// The final date that the certificate is valid.
	ValidToDate *time.Time `json:"dms:Certificate:ValidToDate" type:"timestamp" timestampFormat:"unix"`
}

// String returns the string representation
func (s Certificate) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/Connection
type Connection struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
	EndpointArn *string `json:"dms:Connection:EndpointArn" type:"string"`

	// The identifier of the endpoint. Identifiers must begin with a letter; must
	// contain only ASCII letters, digits, and hyphens; and must not end with a
	// hyphen or contain two consecutive hyphens.
	EndpointIdentifier *string `json:"dms:Connection:EndpointIdentifier" type:"string"`

	// The error message when the connection last failed.
	LastFailureMessage *string `json:"dms:Connection:LastFailureMessage" type:"string"`

	// The Amazon Resource Name (ARN) of the replication instance.
	ReplicationInstanceArn *string `json:"dms:Connection:ReplicationInstanceArn" type:"string"`

	// The replication instance identifier. This parameter is stored as a lowercase
	// string.
	ReplicationInstanceIdentifier *string `json:"dms:Connection:ReplicationInstanceIdentifier" type:"string"`

	// The connection status.
	Status *string `json:"dms:Connection:Status" type:"string"`
}

// String returns the string representation
func (s Connection) String() string {
	return awsutil.Prettify(s)
}

// The settings in JSON format for the DMS Transfer type source endpoint.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/DmsTransferSettings
type DmsTransferSettings struct {
	_ struct{} `type:"structure"`

	// The name of the S3 bucket to use.
	BucketName *string `json:"dms:DmsTransferSettings:BucketName" type:"string"`

	// The IAM role that has permission to access the Amazon S3 bucket.
	ServiceAccessRoleArn *string `json:"dms:DmsTransferSettings:ServiceAccessRoleArn" type:"string"`
}

// String returns the string representation
func (s DmsTransferSettings) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/DynamoDbSettings
type DynamoDbSettings struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) used by the service access IAM role.
	//
	// ServiceAccessRoleArn is a required field
	ServiceAccessRoleArn *string `json:"dms:DynamoDbSettings:ServiceAccessRoleArn" type:"string" required:"true"`
}

// String returns the string representation
func (s DynamoDbSettings) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DynamoDbSettings) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DynamoDbSettings"}

	if s.ServiceAccessRoleArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ServiceAccessRoleArn"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ElasticsearchSettings
type ElasticsearchSettings struct {
	_ struct{} `type:"structure"`

	// The endpoint for the Elasticsearch cluster.
	//
	// EndpointUri is a required field
	EndpointUri *string `json:"dms:ElasticsearchSettings:EndpointUri" type:"string" required:"true"`

	// The maximum number of seconds that DMS retries failed API requests to the
	// Elasticsearch cluster.
	ErrorRetryDuration *int64 `json:"dms:ElasticsearchSettings:ErrorRetryDuration" type:"integer"`

	// The maximum percentage of records that can fail to be written before a full
	// load operation stops.
	FullLoadErrorPercentage *int64 `json:"dms:ElasticsearchSettings:FullLoadErrorPercentage" type:"integer"`

	// The Amazon Resource Name (ARN) used by service to access the IAM role.
	//
	// ServiceAccessRoleArn is a required field
	ServiceAccessRoleArn *string `json:"dms:ElasticsearchSettings:ServiceAccessRoleArn" type:"string" required:"true"`
}

// String returns the string representation
func (s ElasticsearchSettings) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ElasticsearchSettings) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ElasticsearchSettings"}

	if s.EndpointUri == nil {
		invalidParams.Add(aws.NewErrParamRequired("EndpointUri"))
	}

	if s.ServiceAccessRoleArn == nil {
		invalidParams.Add(aws.NewErrParamRequired("ServiceAccessRoleArn"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/Endpoint
type Endpoint struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) used for SSL connection to the endpoint.
	CertificateArn *string `json:"dms:Endpoint:CertificateArn" type:"string"`

	// The name of the database at the endpoint.
	DatabaseName *string `json:"dms:Endpoint:DatabaseName" type:"string"`

	// The settings in JSON format for the DMS transfer type of source endpoint.
	//
	// Possible attributes include the following:
	//
	//    * serviceAccessRoleArn - The IAM role that has permission to access the
	//    Amazon S3 bucket.
	//
	//    * bucketName - The name of the S3 bucket to use.
	//
	//    * compressionType - An optional parameter to use GZIP to compress the
	//    target files. To use GZIP, set this value to NONE (the default). To keep
	//    the files uncompressed, don't use this value.
	//
	// Shorthand syntax for these attributes is as follows: ServiceAccessRoleArn=string,BucketName=string,CompressionType=string
	//
	// JSON syntax for these attributes is as follows: { "ServiceAccessRoleArn":
	// "string", "BucketName": "string", "CompressionType": "none"|"gzip" }
	DmsTransferSettings *DmsTransferSettings `json:"dms:Endpoint:DmsTransferSettings" type:"structure"`

	// The settings for the target DynamoDB database. For more information, see
	// the DynamoDBSettings structure.
	DynamoDbSettings *DynamoDbSettings `json:"dms:Endpoint:DynamoDbSettings" type:"structure"`

	// The settings for the Elasticsearch source endpoint. For more information,
	// see the ElasticsearchSettings structure.
	ElasticsearchSettings *ElasticsearchSettings `json:"dms:Endpoint:ElasticsearchSettings" type:"structure"`

	// The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
	EndpointArn *string `json:"dms:Endpoint:EndpointArn" type:"string"`

	// The database endpoint identifier. Identifiers must begin with a letter; must
	// contain only ASCII letters, digits, and hyphens; and must not end with a
	// hyphen or contain two consecutive hyphens.
	EndpointIdentifier *string `json:"dms:Endpoint:EndpointIdentifier" type:"string"`

	// The type of endpoint. Valid values are source and target.
	EndpointType ReplicationEndpointTypeValue `json:"dms:Endpoint:EndpointType" type:"string" enum:"true"`

	// The expanded name for the engine name. For example, if the EngineName parameter
	// is "aurora," this value would be "Amazon Aurora MySQL."
	EngineDisplayName *string `json:"dms:Endpoint:EngineDisplayName" type:"string"`

	// The database engine name. Valid values, depending on the EndpointType, include
	// mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3,
	// db2, azuredb, sybase, dynamodb, mongodb, and sqlserver.
	EngineName *string `json:"dms:Endpoint:EngineName" type:"string"`

	// Value returned by a call to CreateEndpoint that can be used for cross-account
	// validation. Use it on a subsequent call to CreateEndpoint to create the endpoint
	// with a cross-account.
	ExternalId *string `json:"dms:Endpoint:ExternalId" type:"string"`

	// The external table definition.
	ExternalTableDefinition *string `json:"dms:Endpoint:ExternalTableDefinition" type:"string"`

	// Additional connection attributes used to connect to the endpoint.
	ExtraConnectionAttributes *string `json:"dms:Endpoint:ExtraConnectionAttributes" type:"string"`

	// The settings for the Amazon Kinesis source endpoint. For more information,
	// see the KinesisSettings structure.
	KinesisSettings *KinesisSettings `json:"dms:Endpoint:KinesisSettings" type:"structure"`

	// An AWS KMS key identifier that is used to encrypt the connection parameters
	// for the endpoint.
	//
	// If you don't specify a value for the KmsKeyId parameter, then AWS DMS uses
	// your default encryption key.
	//
	// AWS KMS creates the default encryption key for your AWS account. Your AWS
	// account has a different default encryption key for each AWS Region.
	KmsKeyId *string `json:"dms:Endpoint:KmsKeyId" type:"string"`

	// The settings for the MongoDB source endpoint. For more information, see the
	// MongoDbSettings structure.
	MongoDbSettings *MongoDbSettings `json:"dms:Endpoint:MongoDbSettings" type:"structure"`

	// The port value used to access the endpoint.
	Port *int64 `json:"dms:Endpoint:Port" type:"integer"`

	// Settings for the Amazon Redshift endpoint.
	RedshiftSettings *RedshiftSettings `json:"dms:Endpoint:RedshiftSettings" type:"structure"`

	// The settings for the S3 target endpoint. For more information, see the S3Settings
	// structure.
	S3Settings *S3Settings `json:"dms:Endpoint:S3Settings" type:"structure"`

	// The name of the server at the endpoint.
	ServerName *string `json:"dms:Endpoint:ServerName" type:"string"`

	// The Amazon Resource Name (ARN) used by the service access IAM role.
	ServiceAccessRoleArn *string `json:"dms:Endpoint:ServiceAccessRoleArn" type:"string"`

	// The SSL mode used to connect to the endpoint. The default value is none.
	SslMode DmsSslModeValue `json:"dms:Endpoint:SslMode" type:"string" enum:"true"`

	// The status of the endpoint.
	Status *string `json:"dms:Endpoint:Status" type:"string"`

	// The user name used to connect to the endpoint.
	Username *string `json:"dms:Endpoint:Username" type:"string"`
}

// String returns the string representation
func (s Endpoint) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/Event
type Event struct {
	_ struct{} `type:"structure"`

	// The date of the event.
	Date *time.Time `json:"dms:Event:Date" type:"timestamp" timestampFormat:"unix"`

	// The event categories available for the specified source type.
	EventCategories []string `json:"dms:Event:EventCategories" type:"list"`

	// The event message.
	Message *string `json:"dms:Event:Message" type:"string"`

	// The identifier of an event source.
	SourceIdentifier *string `json:"dms:Event:SourceIdentifier" type:"string"`

	// The type of AWS DMS resource that generates events.
	//
	// Valid values: replication-instance | endpoint | replication-task
	SourceType SourceType `json:"dms:Event:SourceType" type:"string" enum:"true"`
}

// String returns the string representation
func (s Event) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/EventCategoryGroup
type EventCategoryGroup struct {
	_ struct{} `type:"structure"`

	// A list of event categories from a source type that you've chosen.
	EventCategories []string `json:"dms:EventCategoryGroup:EventCategories" type:"list"`

	// The type of AWS DMS resource that generates events.
	//
	// Valid values: replication-instance | replication-server | security-group
	// | replication-task
	SourceType *string `json:"dms:EventCategoryGroup:SourceType" type:"string"`
}

// String returns the string representation
func (s EventCategoryGroup) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/EventSubscription
type EventSubscription struct {
	_ struct{} `type:"structure"`

	// The AWS DMS event notification subscription Id.
	CustSubscriptionId *string `json:"dms:EventSubscription:CustSubscriptionId" type:"string"`

	// The AWS customer account associated with the AWS DMS event notification subscription.
	CustomerAwsId *string `json:"dms:EventSubscription:CustomerAwsId" type:"string"`

	// Boolean value that indicates if the event subscription is enabled.
	Enabled *bool `json:"dms:EventSubscription:Enabled" type:"boolean"`

	// A lists of event categories.
	EventCategoriesList []string `json:"dms:EventSubscription:EventCategoriesList" type:"list"`

	// The topic ARN of the AWS DMS event notification subscription.
	SnsTopicArn *string `json:"dms:EventSubscription:SnsTopicArn" type:"string"`

	// A list of source Ids for the event subscription.
	SourceIdsList []string `json:"dms:EventSubscription:SourceIdsList" type:"list"`

	// The type of AWS DMS resource that generates events.
	//
	// Valid values: replication-instance | replication-server | security-group
	// | replication-task
	SourceType *string `json:"dms:EventSubscription:SourceType" type:"string"`

	// The status of the AWS DMS event notification subscription.
	//
	// Constraints:
	//
	// Can be one of the following: creating | modifying | deleting | active | no-permission
	// | topic-not-exist
	//
	// The status "no-permission" indicates that AWS DMS no longer has permission
	// to post to the SNS topic. The status "topic-not-exist" indicates that the
	// topic was deleted after the subscription was created.
	Status *string `json:"dms:EventSubscription:Status" type:"string"`

	// The time the RDS event notification subscription was created.
	SubscriptionCreationTime *string `json:"dms:EventSubscription:SubscriptionCreationTime" type:"string"`
}

// String returns the string representation
func (s EventSubscription) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/Filter
type Filter struct {
	_ struct{} `type:"structure"`

	// The name of the filter.
	//
	// Name is a required field
	Name *string `json:"dms:Filter:Name" type:"string" required:"true"`

	// The filter value.
	//
	// Values is a required field
	Values []string `json:"dms:Filter:Values" type:"list" required:"true"`
}

// String returns the string representation
func (s Filter) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *Filter) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "Filter"}

	if s.Name == nil {
		invalidParams.Add(aws.NewErrParamRequired("Name"))
	}

	if s.Values == nil {
		invalidParams.Add(aws.NewErrParamRequired("Values"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/KinesisSettings
type KinesisSettings struct {
	_ struct{} `type:"structure"`

	// The output format for the records created on the endpoint. The message format
	// is JSON.
	MessageFormat MessageFormatValue `json:"dms:KinesisSettings:MessageFormat" type:"string" enum:"true"`

	// The Amazon Resource Name (ARN) for the IAM role that DMS uses to write to
	// the Amazon Kinesis data stream.
	ServiceAccessRoleArn *string `json:"dms:KinesisSettings:ServiceAccessRoleArn" type:"string"`

	// The Amazon Resource Name (ARN) for the Amazon Kinesis Data Streams endpoint.
	StreamArn *string `json:"dms:KinesisSettings:StreamArn" type:"string"`
}

// String returns the string representation
func (s KinesisSettings) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/MongoDbSettings
type MongoDbSettings struct {
	_ struct{} `type:"structure"`

	// The authentication mechanism you use to access the MongoDB source endpoint.
	//
	// Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1
	//
	// DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version
	// 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.
	AuthMechanism AuthMechanismValue `json:"dms:MongoDbSettings:AuthMechanism" type:"string" enum:"true"`

	// The MongoDB database name. This attribute is not used when authType=NO.
	//
	// The default is admin.
	AuthSource *string `json:"dms:MongoDbSettings:AuthSource" type:"string"`

	// The authentication type you use to access the MongoDB source endpoint.
	//
	// Valid values: NO, PASSWORD
	//
	// When NO is selected, user name and password parameters are not used and can
	// be empty.
	AuthType AuthTypeValue `json:"dms:MongoDbSettings:AuthType" type:"string" enum:"true"`

	// The database name on the MongoDB source endpoint.
	DatabaseName *string `json:"dms:MongoDbSettings:DatabaseName" type:"string"`

	// Indicates the number of documents to preview to determine the document organization.
	// Use this attribute when NestingLevel is set to ONE.
	//
	// Must be a positive value greater than 0. Default value is 1000.
	DocsToInvestigate *string `json:"dms:MongoDbSettings:DocsToInvestigate" type:"string"`

	// Specifies the document ID. Use this attribute when NestingLevel is set to
	// NONE.
	//
	// Default value is false.
	ExtractDocId *string `json:"dms:MongoDbSettings:ExtractDocId" type:"string"`

	// The AWS KMS key identifier that is used to encrypt the content on the replication
	// instance. If you don't specify a value for the KmsKeyId parameter, then AWS
	// DMS uses your default encryption key. AWS KMS creates the default encryption
	// key for your AWS account. Your AWS account has a different default encryption
	// key for each AWS Region.
	KmsKeyId *string `json:"dms:MongoDbSettings:KmsKeyId" type:"string"`

	// Specifies either document or table mode.
	//
	// Valid values: NONE, ONE
	//
	// Default value is NONE. Specify NONE to use document mode. Specify ONE to
	// use table mode.
	NestingLevel NestingLevelValue `json:"dms:MongoDbSettings:NestingLevel" type:"string" enum:"true"`

	// The password for the user account you use to access the MongoDB source endpoint.
	Password *string `json:"dms:MongoDbSettings:Password" type:"string"`

	// The port value for the MongoDB source endpoint.
	Port *int64 `json:"dms:MongoDbSettings:Port" type:"integer"`

	// The name of the server on the MongoDB source endpoint.
	ServerName *string `json:"dms:MongoDbSettings:ServerName" type:"string"`

	// The user name you use to access the MongoDB source endpoint.
	Username *string `json:"dms:MongoDbSettings:Username" type:"string"`
}

// String returns the string representation
func (s MongoDbSettings) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/OrderableReplicationInstance
type OrderableReplicationInstance struct {
	_ struct{} `type:"structure"`

	// List of Availability Zones for this replication instance.
	AvailabilityZones []string `json:"dms:OrderableReplicationInstance:AvailabilityZones" type:"list"`

	// The default amount of storage (in gigabytes) that is allocated for the replication
	// instance.
	DefaultAllocatedStorage *int64 `json:"dms:OrderableReplicationInstance:DefaultAllocatedStorage" type:"integer"`

	// The version of the replication engine.
	EngineVersion *string `json:"dms:OrderableReplicationInstance:EngineVersion" type:"string"`

	// The amount of storage (in gigabytes) that is allocated for the replication
	// instance.
	IncludedAllocatedStorage *int64 `json:"dms:OrderableReplicationInstance:IncludedAllocatedStorage" type:"integer"`

	// The minimum amount of storage (in gigabytes) that can be allocated for the
	// replication instance.
	MaxAllocatedStorage *int64 `json:"dms:OrderableReplicationInstance:MaxAllocatedStorage" type:"integer"`

	// The minimum amount of storage (in gigabytes) that can be allocated for the
	// replication instance.
	MinAllocatedStorage *int64 `json:"dms:OrderableReplicationInstance:MinAllocatedStorage" type:"integer"`

	// The value returned when the specified EngineVersion of the replication instance
	// is in Beta or test mode. This indicates some features might not work as expected.
	//
	// AWS DMS supports ReleaseStatus in versions 3.1.4 and later.
	ReleaseStatus ReleaseStatusValues `json:"dms:OrderableReplicationInstance:ReleaseStatus" type:"string" enum:"true"`

	// The compute and memory capacity of the replication instance.
	//
	// Valid Values: dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large
	// | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge
	ReplicationInstanceClass *string `json:"dms:OrderableReplicationInstance:ReplicationInstanceClass" type:"string"`

	// The type of storage used by the replication instance.
	StorageType *string `json:"dms:OrderableReplicationInstance:StorageType" type:"string"`
}

// String returns the string representation
func (s OrderableReplicationInstance) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/PendingMaintenanceAction
type PendingMaintenanceAction struct {
	_ struct{} `type:"structure"`

	// The type of pending maintenance action that is available for the resource.
	Action *string `json:"dms:PendingMaintenanceAction:Action" type:"string"`

	// The date of the maintenance window when the action will be applied. The maintenance
	// action will be applied to the resource during its first maintenance window
	// after this date. If this date is specified, any next-maintenance opt-in requests
	// are ignored.
	AutoAppliedAfterDate *time.Time `json:"dms:PendingMaintenanceAction:AutoAppliedAfterDate" type:"timestamp" timestampFormat:"unix"`

	// The effective date when the pending maintenance action will be applied to
	// the resource. This date takes into account opt-in requests received from
	// the ApplyPendingMaintenanceAction API, the AutoAppliedAfterDate, and the
	// ForcedApplyDate. This value is blank if an opt-in request has not been received
	// and nothing has been specified as AutoAppliedAfterDate or ForcedApplyDate.
	CurrentApplyDate *time.Time `json:"dms:PendingMaintenanceAction:CurrentApplyDate" type:"timestamp" timestampFormat:"unix"`

	// A description providing more detail about the maintenance action.
	Description *string `json:"dms:PendingMaintenanceAction:Description" type:"string"`

	// The date when the maintenance action will be automatically applied. The maintenance
	// action will be applied to the resource on this date regardless of the maintenance
	// window for the resource. If this date is specified, any immediate opt-in
	// requests are ignored.
	ForcedApplyDate *time.Time `json:"dms:PendingMaintenanceAction:ForcedApplyDate" type:"timestamp" timestampFormat:"unix"`

	// Indicates the type of opt-in request that has been received for the resource.
	OptInStatus *string `json:"dms:PendingMaintenanceAction:OptInStatus" type:"string"`
}

// String returns the string representation
func (s PendingMaintenanceAction) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/RedshiftSettings
type RedshiftSettings struct {
	_ struct{} `type:"structure"`

	// A value that indicates to allow any date format, including invalid formats
	// such as 00/00/00 00:00:00, to be loaded without generating an error. You
	// can choose true or false (the default).
	//
	// This parameter applies only to TIMESTAMP and DATE columns. Always use ACCEPTANYDATE
	// with the DATEFORMAT parameter. If the date format for the data doesn't match
	// the DATEFORMAT specification, Amazon Redshift inserts a NULL value into that
	// field.
	AcceptAnyDate *bool `json:"dms:RedshiftSettings:AcceptAnyDate" type:"boolean"`

	// Code to run after connecting. This parameter should contain the code itself,
	// not the name of a file containing the code.
	AfterConnectScript *string `json:"dms:RedshiftSettings:AfterConnectScript" type:"string"`

	// The location where the comma-separated value (.csv) files are stored before
	// being uploaded to the S3 bucket.
	BucketFolder *string `json:"dms:RedshiftSettings:BucketFolder" type:"string"`

	// The name of the S3 bucket you want to use
	BucketName *string `json:"dms:RedshiftSettings:BucketName" type:"string"`

	// A value that sets the amount of time to wait (in milliseconds) before timing
	// out, beginning from when you initially establish a connection.
	ConnectionTimeout *int64 `json:"dms:RedshiftSettings:ConnectionTimeout" type:"integer"`

	// The name of the Amazon Redshift data warehouse (service) that you are working
	// with.
	DatabaseName *string `json:"dms:RedshiftSettings:DatabaseName" type:"string"`

	// The date format that you are using. Valid values are auto (case-sensitive),
	// your date format string enclosed in quotes, or NULL. If this parameter is
	// left unset (NULL), it defaults to a format of 'YYYY-MM-DD'. Using auto recognizes
	// most strings, even some that aren't supported when you use a date format
	// string.
	//
	// If your date and time values use formats different from each other, set this
	// to auto.
	DateFormat *string `json:"dms:RedshiftSettings:DateFormat" type:"string"`

	// A value that specifies whether AWS DMS should migrate empty CHAR and VARCHAR
	// fields as NULL. A value of true sets empty CHAR and VARCHAR fields to null.
	// The default is false.
	EmptyAsNull *bool `json:"dms:RedshiftSettings:EmptyAsNull" type:"boolean"`

	// The type of server-side encryption that you want to use for your data. This
	// encryption type is part of the endpoint settings or the extra connections
	// attributes for Amazon S3. You can choose either SSE_S3 (the default) or SSE_KMS.
	// To use SSE_S3, create an AWS Identity and Access Management (IAM) role with
	// a policy that allows "arn:aws:s3:::*" to use the following actions: "s3:PutObject",
	// "s3:ListBucket"
	EncryptionMode EncryptionModeValue `json:"dms:RedshiftSettings:EncryptionMode" type:"string" enum:"true"`

	// The number of threads used to upload a single file. This parameter accepts
	// a value from 1 through 64. It defaults to 10.
	FileTransferUploadStreams *int64 `json:"dms:RedshiftSettings:FileTransferUploadStreams" type:"integer"`

	// The amount of time to wait (in milliseconds) before timing out, beginning
	// from when you begin loading.
	LoadTimeout *int64 `json:"dms:RedshiftSettings:LoadTimeout" type:"integer"`

	// The maximum size (in KB) of any .csv file used to transfer data to Amazon
	// Redshift. This accepts a value from 1 through 1,048,576. It defaults to 32,768
	// KB (32 MB).
	MaxFileSize *int64 `json:"dms:RedshiftSettings:MaxFileSize" type:"integer"`

	// The password for the user named in the username property.
	Password *string `json:"dms:RedshiftSettings:Password" type:"string"`

	// The port number for Amazon Redshift. The default value is 5439.
	Port *int64 `json:"dms:RedshiftSettings:Port" type:"integer"`

	// A value that specifies to remove surrounding quotation marks from strings
	// in the incoming data. All characters within the quotation marks, including
	// delimiters, are retained. Choose true to remove quotation marks. The default
	// is false.
	RemoveQuotes *bool `json:"dms:RedshiftSettings:RemoveQuotes" type:"boolean"`

	// A value that specifies to replaces the invalid characters specified in ReplaceInvalidChars,
	// substituting the specified characters instead. The default is "?".
	ReplaceChars *string `json:"dms:RedshiftSettings:ReplaceChars" type:"string"`

	// A list of characters that you want to replace. Use with ReplaceChars.
	ReplaceInvalidChars *string `json:"dms:RedshiftSettings:ReplaceInvalidChars" type:"string"`

	// The name of the Amazon Redshift cluster you are using.
	ServerName *string `json:"dms:RedshiftSettings:ServerName" type:"string"`

	// The AWS KMS key ID. If you are using SSE_KMS for the EncryptionMode, provide
	// this key ID. The key that you use needs an attached policy that enables IAM
	// user permissions and allows use of the key.
	ServerSideEncryptionKmsKeyId *string `json:"dms:RedshiftSettings:ServerSideEncryptionKmsKeyId" type:"string"`

	// The Amazon Resource Name (ARN) of the IAM role that has access to the Amazon
	// Redshift service.
	ServiceAccessRoleArn *string `json:"dms:RedshiftSettings:ServiceAccessRoleArn" type:"string"`

	// The time format that you want to use. Valid values are auto (case-sensitive),
	// 'timeformat_string', 'epochsecs', or 'epochmillisecs'. It defaults to 10.
	// Using auto recognizes most strings, even some that aren't supported when
	// you use a time format string.
	//
	// If your date and time values use formats different from each other, set this
	// parameter to auto.
	TimeFormat *string `json:"dms:RedshiftSettings:TimeFormat" type:"string"`

	// A value that specifies to remove the trailing white space characters from
	// a VARCHAR string. This parameter applies only to columns with a VARCHAR data
	// type. Choose true to remove unneeded white space. The default is false.
	TrimBlanks *bool `json:"dms:RedshiftSettings:TrimBlanks" type:"boolean"`

	// A value that specifies to truncate data in columns to the appropriate number
	// of characters, so that the data fits in the column. This parameter applies
	// only to columns with a VARCHAR or CHAR data type, and rows with a size of
	// 4 MB or less. Choose true to truncate data. The default is false.
	TruncateColumns *bool `json:"dms:RedshiftSettings:TruncateColumns" type:"boolean"`

	// An Amazon Redshift user name for a registered user.
	Username *string `json:"dms:RedshiftSettings:Username" type:"string"`

	// The size of the write buffer to use in rows. Valid values range from 1 through
	// 2,048. The default is 1,024. Use this setting to tune performance.
	WriteBufferSize *int64 `json:"dms:RedshiftSettings:WriteBufferSize" type:"integer"`
}

// String returns the string representation
func (s RedshiftSettings) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/RefreshSchemasStatus
type RefreshSchemasStatus struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
	EndpointArn *string `json:"dms:RefreshSchemasStatus:EndpointArn" type:"string"`

	// The last failure message for the schema.
	LastFailureMessage *string `json:"dms:RefreshSchemasStatus:LastFailureMessage" type:"string"`

	// The date the schema was last refreshed.
	LastRefreshDate *time.Time `json:"dms:RefreshSchemasStatus:LastRefreshDate" type:"timestamp" timestampFormat:"unix"`

	// The Amazon Resource Name (ARN) of the replication instance.
	ReplicationInstanceArn *string `json:"dms:RefreshSchemasStatus:ReplicationInstanceArn" type:"string"`

	// The status of the schema.
	Status RefreshSchemasStatusTypeValue `json:"dms:RefreshSchemasStatus:Status" type:"string" enum:"true"`
}

// String returns the string representation
func (s RefreshSchemasStatus) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ReplicationInstance
type ReplicationInstance struct {
	_ struct{} `type:"structure"`

	// The amount of storage (in gigabytes) that is allocated for the replication
	// instance.
	AllocatedStorage *int64 `json:"dms:ReplicationInstance:AllocatedStorage" type:"integer"`

	// Boolean value indicating if minor version upgrades will be automatically
	// applied to the instance.
	AutoMinorVersionUpgrade *bool `json:"dms:ReplicationInstance:AutoMinorVersionUpgrade" type:"boolean"`

	// The Availability Zone for the instance.
	AvailabilityZone *string `json:"dms:ReplicationInstance:AvailabilityZone" type:"string"`

	// The DNS name servers for the replication instance.
	DnsNameServers *string `json:"dms:ReplicationInstance:DnsNameServers" type:"string"`

	// The engine version number of the replication instance.
	EngineVersion *string `json:"dms:ReplicationInstance:EngineVersion" type:"string"`

	// The expiration date of the free replication instance that is part of the
	// Free DMS program.
	FreeUntil *time.Time `json:"dms:ReplicationInstance:FreeUntil" type:"timestamp" timestampFormat:"unix"`

	// The time the replication instance was created.
	InstanceCreateTime *time.Time `json:"dms:ReplicationInstance:InstanceCreateTime" type:"timestamp" timestampFormat:"unix"`

	// An AWS KMS key identifier that is used to encrypt the data on the replication
	// instance.
	//
	// If you don't specify a value for the KmsKeyId parameter, then AWS DMS uses
	// your default encryption key.
	//
	// AWS KMS creates the default encryption key for your AWS account. Your AWS
	// account has a different default encryption key for each AWS Region.
	KmsKeyId *string `json:"dms:ReplicationInstance:KmsKeyId" type:"string"`

	// Specifies whether the replication instance is a Multi-AZ deployment. You
	// cannot set the AvailabilityZone parameter if the Multi-AZ parameter is set
	// to true.
	MultiAZ *bool `json:"dms:ReplicationInstance:MultiAZ" type:"boolean"`

	// The pending modification values.
	PendingModifiedValues *ReplicationPendingModifiedValues `json:"dms:ReplicationInstance:PendingModifiedValues" type:"structure"`

	// The maintenance window times for the replication instance.
	PreferredMaintenanceWindow *string `json:"dms:ReplicationInstance:PreferredMaintenanceWindow" type:"string"`

	// Specifies the accessibility options for the replication instance. A value
	// of true represents an instance with a public IP address. A value of false
	// represents an instance with a private IP address. The default value is true.
	PubliclyAccessible *bool `json:"dms:ReplicationInstance:PubliclyAccessible" type:"boolean"`

	// The Amazon Resource Name (ARN) of the replication instance.
	ReplicationInstanceArn *string `json:"dms:ReplicationInstance:ReplicationInstanceArn" type:"string"`

	// The compute and memory capacity of the replication instance.
	//
	// Valid Values: dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large
	// | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge
	ReplicationInstanceClass *string `json:"dms:ReplicationInstance:ReplicationInstanceClass" type:"string"`

	// The replication instance identifier. This parameter is stored as a lowercase
	// string.
	//
	// Constraints:
	//
	//    * Must contain from 1 to 63 alphanumeric characters or hyphens.
	//
	//    * First character must be a letter.
	//
	//    * Cannot end with a hyphen or contain two consecutive hyphens.
	//
	// Example: myrepinstance
	ReplicationInstanceIdentifier *string `json:"dms:ReplicationInstance:ReplicationInstanceIdentifier" type:"string"`

	// The private IP address of the replication instance.
	ReplicationInstancePrivateIpAddress *string `json:"dms:ReplicationInstance:ReplicationInstancePrivateIpAddress" deprecated:"true" type:"string"`

	// One or more private IP addresses for the replication instance.
	ReplicationInstancePrivateIpAddresses []string `json:"dms:ReplicationInstance:ReplicationInstancePrivateIpAddresses" type:"list"`

	// The public IP address of the replication instance.
	ReplicationInstancePublicIpAddress *string `json:"dms:ReplicationInstance:ReplicationInstancePublicIpAddress" deprecated:"true" type:"string"`

	// One or more public IP addresses for the replication instance.
	ReplicationInstancePublicIpAddresses []string `json:"dms:ReplicationInstance:ReplicationInstancePublicIpAddresses" type:"list"`

	// The status of the replication instance.
	ReplicationInstanceStatus *string `json:"dms:ReplicationInstance:ReplicationInstanceStatus" type:"string"`

	// The subnet group for the replication instance.
	ReplicationSubnetGroup *ReplicationSubnetGroup `json:"dms:ReplicationInstance:ReplicationSubnetGroup" type:"structure"`

	// The availability zone of the standby replication instance in a Multi-AZ deployment.
	SecondaryAvailabilityZone *string `json:"dms:ReplicationInstance:SecondaryAvailabilityZone" type:"string"`

	// The VPC security group for the instance.
	VpcSecurityGroups []VpcSecurityGroupMembership `json:"dms:ReplicationInstance:VpcSecurityGroups" type:"list"`
}

// String returns the string representation
func (s ReplicationInstance) String() string {
	return awsutil.Prettify(s)
}

// Contains metadata for a replication instance task log.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ReplicationInstanceTaskLog
type ReplicationInstanceTaskLog struct {
	_ struct{} `type:"structure"`

	// The size, in bytes, of the replication task log.
	ReplicationInstanceTaskLogSize *int64 `json:"dms:ReplicationInstanceTaskLog:ReplicationInstanceTaskLogSize" type:"long"`

	// The Amazon Resource Name (ARN) of the replication task.
	ReplicationTaskArn *string `json:"dms:ReplicationInstanceTaskLog:ReplicationTaskArn" type:"string"`

	// The name of the replication task.
	ReplicationTaskName *string `json:"dms:ReplicationInstanceTaskLog:ReplicationTaskName" type:"string"`
}

// String returns the string representation
func (s ReplicationInstanceTaskLog) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ReplicationPendingModifiedValues
type ReplicationPendingModifiedValues struct {
	_ struct{} `type:"structure"`

	// The amount of storage (in gigabytes) that is allocated for the replication
	// instance.
	AllocatedStorage *int64 `json:"dms:ReplicationPendingModifiedValues:AllocatedStorage" type:"integer"`

	// The engine version number of the replication instance.
	EngineVersion *string `json:"dms:ReplicationPendingModifiedValues:EngineVersion" type:"string"`

	// Specifies whether the replication instance is a Multi-AZ deployment. You
	// cannot set the AvailabilityZone parameter if the Multi-AZ parameter is set
	// to true.
	MultiAZ *bool `json:"dms:ReplicationPendingModifiedValues:MultiAZ" type:"boolean"`

	// The compute and memory capacity of the replication instance.
	//
	// Valid Values: dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large
	// | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge
	ReplicationInstanceClass *string `json:"dms:ReplicationPendingModifiedValues:ReplicationInstanceClass" type:"string"`
}

// String returns the string representation
func (s ReplicationPendingModifiedValues) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ReplicationSubnetGroup
type ReplicationSubnetGroup struct {
	_ struct{} `type:"structure"`

	// A description for the replication subnet group.
	ReplicationSubnetGroupDescription *string `json:"dms:ReplicationSubnetGroup:ReplicationSubnetGroupDescription" type:"string"`

	// The identifier of the replication instance subnet group.
	ReplicationSubnetGroupIdentifier *string `json:"dms:ReplicationSubnetGroup:ReplicationSubnetGroupIdentifier" type:"string"`

	// The status of the subnet group.
	SubnetGroupStatus *string `json:"dms:ReplicationSubnetGroup:SubnetGroupStatus" type:"string"`

	// The subnets that are in the subnet group.
	Subnets []Subnet `json:"dms:ReplicationSubnetGroup:Subnets" type:"list"`

	// The ID of the VPC.
	VpcId *string `json:"dms:ReplicationSubnetGroup:VpcId" type:"string"`
}

// String returns the string representation
func (s ReplicationSubnetGroup) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ReplicationTask
type ReplicationTask struct {
	_ struct{} `type:"structure"`

	// Indicates when you want a change data capture (CDC) operation to start. Use
	// either CdcStartPosition or CdcStartTime to specify when you want the CDC
	// operation to start. Specifying both values results in an error.
	//
	// The value can be in date, checkpoint, or LSN/SCN format.
	//
	// Date Example: --cdc-start-position “2018-03-08T12:12:12”
	//
	// Checkpoint Example: --cdc-start-position "checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93"
	//
	// LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”
	CdcStartPosition *string `json:"dms:ReplicationTask:CdcStartPosition" type:"string"`

	// Indicates when you want a change data capture (CDC) operation to stop. The
	// value can be either server time or commit time.
	//
	// Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”
	//
	// Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12
	// “
	CdcStopPosition *string `json:"dms:ReplicationTask:CdcStopPosition" type:"string"`

	// The last error (failure) message generated for the replication instance.
	LastFailureMessage *string `json:"dms:ReplicationTask:LastFailureMessage" type:"string"`

	// The type of migration.
	MigrationType MigrationTypeValue `json:"dms:ReplicationTask:MigrationType" type:"string" enum:"true"`

	// Indicates the last checkpoint that occurred during a change data capture
	// (CDC) operation. You can provide this value to the CdcStartPosition parameter
	// to start a CDC operation that begins at that checkpoint.
	RecoveryCheckpoint *string `json:"dms:ReplicationTask:RecoveryCheckpoint" type:"string"`

	// The Amazon Resource Name (ARN) of the replication instance.
	ReplicationInstanceArn *string `json:"dms:ReplicationTask:ReplicationInstanceArn" type:"string"`

	// The Amazon Resource Name (ARN) of the replication task.
	ReplicationTaskArn *string `json:"dms:ReplicationTask:ReplicationTaskArn" type:"string"`

	// The date the replication task was created.
	ReplicationTaskCreationDate *time.Time `json:"dms:ReplicationTask:ReplicationTaskCreationDate" type:"timestamp" timestampFormat:"unix"`

	// The user-assigned replication task identifier or name.
	//
	// Constraints:
	//
	//    * Must contain from 1 to 255 alphanumeric characters or hyphens.
	//
	//    * First character must be a letter.
	//
	//    * Cannot end with a hyphen or contain two consecutive hyphens.
	ReplicationTaskIdentifier *string `json:"dms:ReplicationTask:ReplicationTaskIdentifier" type:"string"`

	// The settings for the replication task.
	ReplicationTaskSettings *string `json:"dms:ReplicationTask:ReplicationTaskSettings" type:"string"`

	// The date the replication task is scheduled to start.
	ReplicationTaskStartDate *time.Time `json:"dms:ReplicationTask:ReplicationTaskStartDate" type:"timestamp" timestampFormat:"unix"`

	// The statistics for the task, including elapsed time, tables loaded, and table
	// errors.
	ReplicationTaskStats *ReplicationTaskStats `json:"dms:ReplicationTask:ReplicationTaskStats" type:"structure"`

	// The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
	SourceEndpointArn *string `json:"dms:ReplicationTask:SourceEndpointArn" type:"string"`

	// The status of the replication task.
	Status *string `json:"dms:ReplicationTask:Status" type:"string"`

	// The reason the replication task was stopped.
	StopReason *string `json:"dms:ReplicationTask:StopReason" type:"string"`

	// Table mappings specified in the task.
	TableMappings *string `json:"dms:ReplicationTask:TableMappings" type:"string"`

	// The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
	TargetEndpointArn *string `json:"dms:ReplicationTask:TargetEndpointArn" type:"string"`
}

// String returns the string representation
func (s ReplicationTask) String() string {
	return awsutil.Prettify(s)
}

// The task assessment report in JSON format.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ReplicationTaskAssessmentResult
type ReplicationTaskAssessmentResult struct {
	_ struct{} `type:"structure"`

	// The task assessment results in JSON format.
	AssessmentResults *string `json:"dms:ReplicationTaskAssessmentResult:AssessmentResults" type:"string"`

	// The file containing the results of the task assessment.
	AssessmentResultsFile *string `json:"dms:ReplicationTaskAssessmentResult:AssessmentResultsFile" type:"string"`

	// The status of the task assessment.
	AssessmentStatus *string `json:"dms:ReplicationTaskAssessmentResult:AssessmentStatus" type:"string"`

	// The Amazon Resource Name (ARN) of the replication task.
	ReplicationTaskArn *string `json:"dms:ReplicationTaskAssessmentResult:ReplicationTaskArn" type:"string"`

	// The replication task identifier of the task on which the task assessment
	// was run.
	ReplicationTaskIdentifier *string `json:"dms:ReplicationTaskAssessmentResult:ReplicationTaskIdentifier" type:"string"`

	// The date the task assessment was completed.
	ReplicationTaskLastAssessmentDate *time.Time `json:"dms:ReplicationTaskAssessmentResult:ReplicationTaskLastAssessmentDate" type:"timestamp" timestampFormat:"unix"`

	// The URL of the S3 object containing the task assessment results.
	S3ObjectUrl *string `json:"dms:ReplicationTaskAssessmentResult:S3ObjectUrl" type:"string"`
}

// String returns the string representation
func (s ReplicationTaskAssessmentResult) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ReplicationTaskStats
type ReplicationTaskStats struct {
	_ struct{} `type:"structure"`

	// The elapsed time of the task, in milliseconds.
	ElapsedTimeMillis *int64 `json:"dms:ReplicationTaskStats:ElapsedTimeMillis" type:"long"`

	// The percent complete for the full load migration task.
	FullLoadProgressPercent *int64 `json:"dms:ReplicationTaskStats:FullLoadProgressPercent" type:"integer"`

	// The number of errors that have occurred during this task.
	TablesErrored *int64 `json:"dms:ReplicationTaskStats:TablesErrored" type:"integer"`

	// The number of tables loaded for this task.
	TablesLoaded *int64 `json:"dms:ReplicationTaskStats:TablesLoaded" type:"integer"`

	// The number of tables currently loading for this task.
	TablesLoading *int64 `json:"dms:ReplicationTaskStats:TablesLoading" type:"integer"`

	// The number of tables queued for this task.
	TablesQueued *int64 `json:"dms:ReplicationTaskStats:TablesQueued" type:"integer"`
}

// String returns the string representation
func (s ReplicationTaskStats) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/ResourcePendingMaintenanceActions
type ResourcePendingMaintenanceActions struct {
	_ struct{} `type:"structure"`

	// Detailed information about the pending maintenance action.
	PendingMaintenanceActionDetails []PendingMaintenanceAction `json:"dms:ResourcePendingMaintenanceActions:PendingMaintenanceActionDetails" type:"list"`

	// The Amazon Resource Name (ARN) of the DMS resource that the pending maintenance
	// action applies to. For information about creating an ARN, see Constructing
	// an Amazon Resource Name (ARN) for AWS DMS (https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.AWS.ARN.html)
	// in the DMS documentation.
	ResourceIdentifier *string `json:"dms:ResourcePendingMaintenanceActions:ResourceIdentifier" type:"string"`
}

// String returns the string representation
func (s ResourcePendingMaintenanceActions) String() string {
	return awsutil.Prettify(s)
}

// Settings for exporting data to Amazon S3.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/S3Settings
type S3Settings struct {
	_ struct{} `type:"structure"`

	// An optional parameter to set a folder name in the S3 bucket. If provided,
	// tables are created in the path bucketFolder/schema_name/table_name/. If this
	// parameter is not specified, then the path used is schema_name/table_name/.
	BucketFolder *string `json:"dms:S3Settings:BucketFolder" type:"string"`

	// The name of the S3 bucket.
	BucketName *string `json:"dms:S3Settings:BucketName" type:"string"`

	// A value that enables a change data capture (CDC) load to write only INSERT
	// operations to .csv or columnar storage (.parquet) output files. By default
	// (the false setting), the first field in a .csv or .parquet record contains
	// the letter I (INSERT), U (UPDATE), or D (DELETE). These values indicate whether
	// the row was inserted, updated, or deleted at the source database for a CDC
	// load to the target.
	//
	// If cdcInsertsOnly is set to true or y, only INSERTs from the source database
	// are migrated to the .csv or .parquet file. For .csv format only, how these
	// INSERTs are recorded depends on the value of IncludeOpForFullLoad. If IncludeOpForFullLoad
	// is set to true, the first field of every CDC record is set to I to indicate
	// the INSERT operation at the source. If IncludeOpForFullLoad is set to false,
	// every CDC record is written without a first field to indicate the INSERT
	// operation at the source. For more information about how these settings work
	// together, see Indicating Source DB Operations in Migrated S3 Data (https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring.InsertOps)
	// in the AWS Database Migration Service User Guide..
	//
	// AWS DMS supports this interaction between CdcInsertsOnly and IncludeOpForFullLoad
	// in versions 3.1.4 and later.
	CdcInsertsOnly *bool `json:"dms:S3Settings:CdcInsertsOnly" type:"boolean"`

	// An optional parameter to use GZIP to compress the target files. Set to GZIP
	// to compress the target files. Set to NONE (the default) or do not use to
	// leave the files uncompressed. Applies to both .csv and .parquet file formats.
	CompressionType CompressionTypeValue `json:"dms:S3Settings:CompressionType" type:"string" enum:"true"`

	// The delimiter used to separate columns in the source files. The default is
	// a comma.
	CsvDelimiter *string `json:"dms:S3Settings:CsvDelimiter" type:"string"`

	// The delimiter used to separate rows in the source files. The default is a
	// carriage return (\n).
	CsvRowDelimiter *string `json:"dms:S3Settings:CsvRowDelimiter" type:"string"`

	// The format of the data that you want to use for output. You can choose one
	// of the following:
	//
	//    * csv : This is a row-based file format with comma-separated values (.csv).
	//
	//    * parquet : Apache Parquet (.parquet) is a columnar storage file format
	//    that features efficient compression and provides faster query response.
	DataFormat DataFormatValue `json:"dms:S3Settings:DataFormat" type:"string" enum:"true"`

	// The size of one data page in bytes. This parameter defaults to 1024 * 1024
	// bytes (1 MiB). This number is used for .parquet file format only.
	DataPageSize *int64 `json:"dms:S3Settings:DataPageSize" type:"integer"`

	// The maximum size of an encoded dictionary page of a column. If the dictionary
	// page exceeds this, this column is stored using an encoding type of PLAIN.
	// This parameter defaults to 1024 * 1024 bytes (1 MiB), the maximum size of
	// a dictionary page before it reverts to PLAIN encoding. This size is used
	// for .parquet file format only.
	DictPageSizeLimit *int64 `json:"dms:S3Settings:DictPageSizeLimit" type:"integer"`

	// A value that enables statistics for Parquet pages and row groups. Choose
	// true to enable statistics, false to disable. Statistics include NULL, DISTINCT,
	// MAX, and MIN values. This parameter defaults to true. This value is used
	// for .parquet file format only.
	EnableStatistics *bool `json:"dms:S3Settings:EnableStatistics" type:"boolean"`

	// The type of encoding you are using:
	//
	//    * RLE_DICTIONARY uses a combination of bit-packing and run-length encoding
	//    to store repeated values more efficiently. This is the default.
	//
	//    * PLAIN doesn't use encoding at all. Values are stored as they are.
	//
	//    * PLAIN_DICTIONARY builds a dictionary of the values encountered in a
	//    given column. The dictionary is stored in a dictionary page for each column
	//    chunk.
	EncodingType EncodingTypeValue `json:"dms:S3Settings:EncodingType" type:"string" enum:"true"`

	// The type of server-side encryption that you want to use for your data. This
	// encryption type is part of the endpoint settings or the extra connections
	// attributes for Amazon S3. You can choose either SSE_S3 (the default) or SSE_KMS.
	// To use SSE_S3, you need an AWS Identity and Access Management (IAM) role
	// with permission to allow "arn:aws:s3:::dms-*" to use the following actions:
	//
	//    * s3:CreateBucket
	//
	//    * s3:ListBucket
	//
	//    * s3:DeleteBucket
	//
	//    * s3:GetBucketLocation
	//
	//    * s3:GetObject
	//
	//    * s3:PutObject
	//
	//    * s3:DeleteObject
	//
	//    * s3:GetObjectVersion
	//
	//    * s3:GetBucketPolicy
	//
	//    * s3:PutBucketPolicy
	//
	//    * s3:DeleteBucketPolicy
	EncryptionMode EncryptionModeValue `json:"dms:S3Settings:EncryptionMode" type:"string" enum:"true"`

	// The external table definition.
	ExternalTableDefinition *string `json:"dms:S3Settings:ExternalTableDefinition" type:"string"`

	// A value that enables a full load to write INSERT operations to the comma-separated
	// value (.csv) output files only to indicate how the rows were added to the
	// source database.
	//
	// AWS DMS supports IncludeOpForFullLoad in versions 3.1.4 and later.
	//
	// For full load, records can only be inserted. By default (the false setting),
	// no information is recorded in these output files for a full load to indicate
	// that the rows were inserted at the source database. If IncludeOpForFullLoad
	// is set to true or y, the INSERT is recorded as an I annotation in the first
	// field of the .csv file. This allows the format of your target records from
	// a full load to be consistent with the target records from a CDC load.
	//
	// This setting works together with CdcInsertsOnly for output to .csv files
	// only. For more information about how these settings work together, see Indicating
	// Source DB Operations in Migrated S3 Data (https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring.InsertOps)
	// in the AWS Database Migration Service User Guide..
	IncludeOpForFullLoad *bool `json:"dms:S3Settings:IncludeOpForFullLoad" type:"boolean"`

	// The version of the Apache Parquet format that you want to use: parquet_1_0
	// (the default) or parquet_2_0.
	ParquetVersion ParquetVersionValue `json:"dms:S3Settings:ParquetVersion" type:"string" enum:"true"`

	// The number of rows in a row group. A smaller row group size provides faster
	// reads. But as the number of row groups grows, the slower writes become. This
	// parameter defaults to 10,000 rows. This number is used for .parquet file
	// format only.
	//
	// If you choose a value larger than the maximum, RowGroupLength is set to the
	// max row group length in bytes (64 * 1024 * 1024).
	RowGroupLength *int64 `json:"dms:S3Settings:RowGroupLength" type:"integer"`

	// If you are using SSE_KMS for the EncryptionMode, provide the AWS KMS key
	// ID. The key that you use needs an attached policy that enables AWS Identity
	// and Access Management (IAM) user permissions and allows use of the key.
	//
	// Here is a CLI example: aws dms create-endpoint --endpoint-identifier value
	// --endpoint-type target --engine-name s3 --s3-settings ServiceAccessRoleArn=value,BucketFolder=value,BucketName=value,EncryptionMode=SSE_KMS,ServerSideEncryptionKmsKeyId=value
	ServerSideEncryptionKmsKeyId *string `json:"dms:S3Settings:ServerSideEncryptionKmsKeyId" type:"string"`

	// The Amazon Resource Name (ARN) used by the service access IAM role.
	ServiceAccessRoleArn *string `json:"dms:S3Settings:ServiceAccessRoleArn" type:"string"`

	// A value that includes a timestamp column in the Amazon S3 target endpoint
	// data. AWS DMS includes an additional column in the migrated data when you
	// set timestampColumnName to a non-blank value.
	//
	// AWS DMS supports TimestampColumnName in versions 3.1.4 and later.
	//
	// For a full load, each row of the timestamp column contains a timestamp for
	// when the data was transferred from the source to the target by DMS. For a
	// CDC load, each row of the timestamp column contains the timestamp for the
	// commit of that row in the source database. The format for the timestamp column
	// value is yyyy-MM-dd HH:mm:ss.SSSSSS. For CDC, the microsecond precision depends
	// on the commit timestamp supported by DMS for the source database. When the
	// AddColumnName setting is set to true, DMS also includes the name for the
	// timestamp column that you set as the nonblank value of timestampColumnName.
	TimestampColumnName *string `json:"dms:S3Settings:TimestampColumnName" type:"string"`
}

// String returns the string representation
func (s S3Settings) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/Subnet
type Subnet struct {
	_ struct{} `type:"structure"`

	// The Availability Zone of the subnet.
	SubnetAvailabilityZone *AvailabilityZone `json:"dms:Subnet:SubnetAvailabilityZone" type:"structure"`

	// The subnet identifier.
	SubnetIdentifier *string `json:"dms:Subnet:SubnetIdentifier" type:"string"`

	// The status of the subnet.
	SubnetStatus *string `json:"dms:Subnet:SubnetStatus" type:"string"`
}

// String returns the string representation
func (s Subnet) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/SupportedEndpointType
type SupportedEndpointType struct {
	_ struct{} `type:"structure"`

	// The type of endpoint. Valid values are source and target.
	EndpointType ReplicationEndpointTypeValue `json:"dms:SupportedEndpointType:EndpointType" type:"string" enum:"true"`

	// The expanded name for the engine name. For example, if the EngineName parameter
	// is "aurora," this value would be "Amazon Aurora MySQL."
	EngineDisplayName *string `json:"dms:SupportedEndpointType:EngineDisplayName" type:"string"`

	// The database engine name. Valid values, depending on the EndpointType, include
	// mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3,
	// db2, azuredb, sybase, dynamodb, mongodb, and sqlserver.
	EngineName *string `json:"dms:SupportedEndpointType:EngineName" type:"string"`

	// Indicates if Change Data Capture (CDC) is supported.
	SupportsCDC *bool `json:"dms:SupportedEndpointType:SupportsCDC" type:"boolean"`
}

// String returns the string representation
func (s SupportedEndpointType) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/TableStatistics
type TableStatistics struct {
	_ struct{} `type:"structure"`

	// The Data Definition Language (DDL) used to build and modify the structure
	// of your tables.
	Ddls *int64 `json:"dms:TableStatistics:Ddls" type:"long"`

	// The number of delete actions performed on a table.
	Deletes *int64 `json:"dms:TableStatistics:Deletes" type:"long"`

	// The number of rows that failed conditional checks during the Full Load operation
	// (valid only for DynamoDB as a target migrations).
	FullLoadCondtnlChkFailedRows *int64 `json:"dms:TableStatistics:FullLoadCondtnlChkFailedRows" type:"long"`

	// The number of rows that failed to load during the Full Load operation (valid
	// only for DynamoDB as a target migrations).
	FullLoadErrorRows *int64 `json:"dms:TableStatistics:FullLoadErrorRows" type:"long"`

	// The number of rows added during the Full Load operation.
	FullLoadRows *int64 `json:"dms:TableStatistics:FullLoadRows" type:"long"`

	// The number of insert actions performed on a table.
	Inserts *int64 `json:"dms:TableStatistics:Inserts" type:"long"`

	// The last time the table was updated.
	LastUpdateTime *time.Time `json:"dms:TableStatistics:LastUpdateTime" type:"timestamp" timestampFormat:"unix"`

	// The schema name.
	SchemaName *string `json:"dms:TableStatistics:SchemaName" type:"string"`

	// The name of the table.
	TableName *string `json:"dms:TableStatistics:TableName" type:"string"`

	// The state of the tables described.
	//
	// Valid states: Table does not exist | Before load | Full load | Table completed
	// | Table cancelled | Table error | Table all | Table updates | Table is being
	// reloaded
	TableState *string `json:"dms:TableStatistics:TableState" type:"string"`

	// The number of update actions performed on a table.
	Updates *int64 `json:"dms:TableStatistics:Updates" type:"long"`

	// The number of records that failed validation.
	ValidationFailedRecords *int64 `json:"dms:TableStatistics:ValidationFailedRecords" type:"long"`

	// The number of records that have yet to be validated.
	ValidationPendingRecords *int64 `json:"dms:TableStatistics:ValidationPendingRecords" type:"long"`

	// The validation state of the table.
	//
	// The parameter can have the following values
	//
	//    * Not enabled—Validation is not enabled for the table in the migration
	//    task.
	//
	//    * Pending records—Some records in the table are waiting for validation.
	//
	//    * Mismatched records—Some records in the table do not match between
	//    the source and target.
	//
	//    * Suspended records—Some records in the table could not be validated.
	//
	//    * No primary key—The table could not be validated because it had no
	//    primary key.
	//
	//    * Table error—The table was not validated because it was in an error
	//    state and some data was not migrated.
	//
	//    * Validated—All rows in the table were validated. If the table is updated,
	//    the status can change from Validated.
	//
	//    * Error—The table could not be validated because of an unexpected error.
	ValidationState *string `json:"dms:TableStatistics:ValidationState" type:"string"`

	// Additional details about the state of validation.
	ValidationStateDetails *string `json:"dms:TableStatistics:ValidationStateDetails" type:"string"`

	// The number of records that could not be validated.
	ValidationSuspendedRecords *int64 `json:"dms:TableStatistics:ValidationSuspendedRecords" type:"long"`
}

// String returns the string representation
func (s TableStatistics) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/TableToReload
type TableToReload struct {
	_ struct{} `type:"structure"`

	// The schema name of the table to be reloaded.
	SchemaName *string `json:"dms:TableToReload:SchemaName" type:"string"`

	// The table name of the table to be reloaded.
	TableName *string `json:"dms:TableToReload:TableName" type:"string"`
}

// String returns the string representation
func (s TableToReload) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/Tag
type Tag struct {
	_ struct{} `type:"structure"`

	// A key is the required name of the tag. The string value can be from 1 to
	// 128 Unicode characters in length and cannot be prefixed with "aws:" or "dms:".
	// The string can only contain only the set of Unicode letters, digits, white-space,
	// '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
	Key *string `json:"dms:Tag:Key" type:"string"`

	// A value is the optional value of the tag. The string value can be from 1
	// to 256 Unicode characters in length and cannot be prefixed with "aws:" or
	// "dms:". The string can only contain only the set of Unicode letters, digits,
	// white-space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
	Value *string `json:"dms:Tag:Value" type:"string"`
}

// String returns the string representation
func (s Tag) String() string {
	return awsutil.Prettify(s)
}

// Please also see https://docs.aws.amazon.com/goto/WebAPI/dms-2016-01-01/VpcSecurityGroupMembership
type VpcSecurityGroupMembership struct {
	_ struct{} `type:"structure"`

	// The status of the VPC security group.
	Status *string `json:"dms:VpcSecurityGroupMembership:Status" type:"string"`

	// The VPC security group Id.
	VpcSecurityGroupId *string `json:"dms:VpcSecurityGroupMembership:VpcSecurityGroupId" type:"string"`
}

// String returns the string representation
func (s VpcSecurityGroupMembership) String() string {
	return awsutil.Prettify(s)
}
