// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package applicationinsights

import (
	"time"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/internal/awsutil"
)

var _ aws.Config
var _ = awsutil.Prettify

// Describes a standalone resource or similarly grouped resources that the application
// is made up of.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/application-insights-2018-11-25/ApplicationComponent
type ApplicationComponent struct {
	_ struct{} `type:"structure"`

	// The name of the component.
	ComponentName *string `json:"applicationinsights:ApplicationComponent:ComponentName" type:"string"`

	// Indicates whether the application component is monitored.
	Monitor *bool `json:"applicationinsights:ApplicationComponent:Monitor" type:"boolean"`

	// The resource type. Supported resource types include EC2 instances, Auto Scaling
	// group, Classic ELB, Application ELB, and SQS Queue.
	ResourceType *string `json:"applicationinsights:ApplicationComponent:ResourceType" type:"string"`

	// The stack tier of the application component.
	Tier *string `json:"applicationinsights:ApplicationComponent:Tier" type:"string"`
}

// String returns the string representation
func (s ApplicationComponent) String() string {
	return awsutil.Prettify(s)
}

// Describes the status of the application.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/application-insights-2018-11-25/ApplicationInfo
type ApplicationInfo struct {
	_ struct{} `type:"structure"`

	// The lifecycle of the application.
	LifeCycle *string `json:"applicationinsights:ApplicationInfo:LifeCycle" type:"string"`

	// The issues on the user side that are blocking Application Insights from fully
	// monitoring the application.
	Remarks *string `json:"applicationinsights:ApplicationInfo:Remarks" type:"string"`

	// The name of the resource group used for the application.
	ResourceGroupName *string `json:"applicationinsights:ApplicationInfo:ResourceGroupName" type:"string"`
}

// String returns the string representation
func (s ApplicationInfo) String() string {
	return awsutil.Prettify(s)
}

// Describes an anomaly or error with the application.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/application-insights-2018-11-25/Observation
type Observation struct {
	_ struct{} `type:"structure"`

	// The time when the observation ended, in epoch seconds.
	EndTime *time.Time `json:"applicationinsights:Observation:EndTime" type:"timestamp" timestampFormat:"unix"`

	// The ID of the observation type.
	Id *string `json:"applicationinsights:Observation:Id" type:"string"`

	// The timestamp in the CloudWatch Logs that specifies when the matched line
	// occurred.
	LineTime *time.Time `json:"applicationinsights:Observation:LineTime" type:"timestamp" timestampFormat:"unix"`

	// The log filter of the observation.
	LogFilter LogFilter `json:"applicationinsights:Observation:LogFilter" type:"string" enum:"true"`

	// The log group name.
	LogGroup *string `json:"applicationinsights:Observation:LogGroup" type:"string"`

	// The log text of the observation.
	LogText *string `json:"applicationinsights:Observation:LogText" type:"string"`

	// The name of the observation metric.
	MetricName *string `json:"applicationinsights:Observation:MetricName" type:"string"`

	// The namespace of the observation metric.
	MetricNamespace *string `json:"applicationinsights:Observation:MetricNamespace" type:"string"`

	// The source resource ARN of the observation.
	SourceARN *string `json:"applicationinsights:Observation:SourceARN" type:"string"`

	// The source type of the observation.
	SourceType *string `json:"applicationinsights:Observation:SourceType" type:"string"`

	// The time when the observation was first detected, in epoch seconds.
	StartTime *time.Time `json:"applicationinsights:Observation:StartTime" type:"timestamp" timestampFormat:"unix"`

	// The unit of the source observation metric.
	Unit *string `json:"applicationinsights:Observation:Unit" type:"string"`

	// The value of the source observation metric.
	Value *float64 `json:"applicationinsights:Observation:Value" type:"double"`
}

// String returns the string representation
func (s Observation) String() string {
	return awsutil.Prettify(s)
}

// Describes a problem that is detected by correlating observations.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/application-insights-2018-11-25/Problem
type Problem struct {
	_ struct{} `type:"structure"`

	// The resource affected by the problem.
	AffectedResource *string `json:"applicationinsights:Problem:AffectedResource" type:"string"`

	// The time when the problem ended, in epoch seconds.
	EndTime *time.Time `json:"applicationinsights:Problem:EndTime" type:"timestamp" timestampFormat:"unix"`

	// Feedback provided by the user about the problem.
	Feedback map[string]FeedbackValue `json:"applicationinsights:Problem:Feedback" type:"map"`

	// The ID of the problem.
	Id *string `json:"applicationinsights:Problem:Id" type:"string"`

	// A detailed analysis of the problem using machine learning.
	Insights *string `json:"applicationinsights:Problem:Insights" type:"string"`

	// The name of the resource group affected by the problem.
	ResourceGroupName *string `json:"applicationinsights:Problem:ResourceGroupName" type:"string"`

	// A measure of the level of impact of the problem.
	SeverityLevel SeverityLevel `json:"applicationinsights:Problem:SeverityLevel" type:"string" enum:"true"`

	// The time when the problem started, in epoch seconds.
	StartTime *time.Time `json:"applicationinsights:Problem:StartTime" type:"timestamp" timestampFormat:"unix"`

	// The status of the problem.
	Status Status `json:"applicationinsights:Problem:Status" type:"string" enum:"true"`

	// The name of the problem.
	Title *string `json:"applicationinsights:Problem:Title" type:"string"`
}

// String returns the string representation
func (s Problem) String() string {
	return awsutil.Prettify(s)
}

// Describes observations related to the problem.
// Please also see https://docs.aws.amazon.com/goto/WebAPI/application-insights-2018-11-25/RelatedObservations
type RelatedObservations struct {
	_ struct{} `type:"structure"`

	// The list of observations related to the problem.
	ObservationList []Observation `json:"applicationinsights:RelatedObservations:ObservationList" type:"list"`
}

// String returns the string representation
func (s RelatedObservations) String() string {
	return awsutil.Prettify(s)
}
